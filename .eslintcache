[{"D:\\web-dev\\project-2-vishankrug\\src\\index.js":"1","D:\\web-dev\\project-2-vishankrug\\src\\App.js":"2","D:\\web-dev\\project-2-vishankrug\\src\\components\\Search.js":"3","D:\\web-dev\\project-2-vishankrug\\src\\components\\Buttons.js":"4","D:\\web-dev\\project-2-vishankrug\\src\\components\\Navigation.js":"5","D:\\web-dev\\project-2-vishankrug\\src\\components\\People.js":"6","D:\\web-dev\\project-2-vishankrug\\src\\components\\Events.js":"7","D:\\web-dev\\project-2-vishankrug\\src\\components\\LandingPage.js":"8","D:\\web-dev\\project-2-vishankrug\\src\\components\\SubmissionPages.js":"9","D:\\web-dev\\project-2-vishankrug\\src\\components\\Forms.js":"10"},{"size":1027,"mtime":1608168856523,"results":"11","hashOfConfig":"12"},{"size":3946,"mtime":1608176982558,"results":"13","hashOfConfig":"12"},{"size":1151,"mtime":1607986290837,"results":"14","hashOfConfig":"12"},{"size":2071,"mtime":1608166187028,"results":"15","hashOfConfig":"12"},{"size":2035,"mtime":1608166072325,"results":"16","hashOfConfig":"12"},{"size":4747,"mtime":1608176982560,"results":"17","hashOfConfig":"12"},{"size":6764,"mtime":1608176982586,"results":"18","hashOfConfig":"12"},{"size":1050,"mtime":1608166288581,"results":"19","hashOfConfig":"12"},{"size":653,"mtime":1608176982561,"results":"20","hashOfConfig":"12"},{"size":6544,"mtime":1608176982576,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ln2idt",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"D:\\web-dev\\project-2-vishankrug\\src\\index.js",[],["45","46"],"D:\\web-dev\\project-2-vishankrug\\src\\App.js",["47","48"],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Search.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Buttons.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Navigation.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\People.js",["49","50"],"import React from 'react';\r\nimport {Card, CardText, CardBody,CardLink, CardTitle, Col, Row} from 'reactstrap';\r\nimport { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { useParams } from \"react-router-dom\";\r\nimport {BackButton} from './Buttons.js';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport { SearchBarPage } from './Search.js';\r\n\r\n\r\n\r\n\r\nexport function PeopleList(props){\r\n    let people = props.people;\r\n  //search states\r\n  const [nameState, setNameSearch] = useState('');\r\n  const [majorState, setMajorSearch] = useState('');\r\n  const [interestsState, setInterestsSearch] = useState('');\r\n\r\n\r\n  //filter the results by search\r\n  let filteredPeople = people.filter((person) => {\r\n    return (person.fname.toLowerCase().indexOf(nameState.toLowerCase()) !== -1 || person.lname.toLowerCase().indexOf(nameState.toLowerCase())!== -1) || ((person.fname.toLowerCase()+ \" \" + person.lname.toLowerCase()).indexOf(nameState.toLowerCase()) !== -1);\r\n  });\r\n\r\n  if(majorState !== ''){\r\n    filteredPeople = filteredPeople.filter((person) => {\r\n      return (person.major.toLowerCase().indexOf(majorState.toLowerCase()) !== -1);\r\n    });\r\n  }\r\n\r\n  if(interestsState !== ''){\r\n    filteredPeople = filteredPeople.filter((person) => {\r\n      return (person.interests.toLowerCase().indexOf(interestsState.toLowerCase()) !== -1);\r\n    });\r\n  }\r\n\r\n  //setStates\r\n\r\n  const updateNameSearch = (person) => {\r\n    setNameSearch(person.target.value);\r\n  }\r\n\r\n  const updateMajorSearch = (person) => {\r\n    setMajorSearch(person.target.value);\r\n  }\r\n\r\n  const updateInterestsSearch = (person) => {\r\n    setInterestsSearch(person.target.value);\r\n  } \r\n\r\n  const clearPeople = () => {\r\n    setNameSearch('');\r\n    setInterestsSearch('');\r\n    setMajorSearch('');\r\n  }\r\n\r\n    let peopleCards = filteredPeople.map((individual) => {\r\n    return <PeopleCard key={individual.email} people={individual} />\r\n  })\r\n\r\n  \r\n  const postUser = (event) => {\r\n    //event.preventDefault();\r\n\r\n    const newPerson = {\r\n      name: props.user.displayName,\r\n      major: \"-\",\r\n      interest: \"-\",\r\n      year: \"-\",\r\n      email: props.user.email,\r\n      bio: \"-\"\r\n    }\r\n\r\n    const peopleRef = firebase.database().ref('people')\r\n\r\n\r\n  }\r\n\r\n  postUser(props.user);\r\n\r\n  return(\r\n    <div>\r\n      <div className=\"search-bar\">\r\n        <SearchBarPage updateNameSearch={updateNameSearch} nameState={nameState} updateMajorSearch={updateMajorSearch} majorState={majorState} interestsState={interestsState} updateInterestsSearch={updateInterestsSearch} clearPeople={clearPeople} ></SearchBarPage>\r\n      </div>\r\n    <Row>\r\n      {peopleCards}\r\n    </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function PeopleCard(props) {\r\n  \r\n    const [redirectTo, setRedirectTo] = useState(undefined);\r\n\r\n    let people = props.people;\r\n\r\n    const handleClick = () => {\r\n      setRedirectTo(\"/people/\"+people.fname);\r\n    }\r\n\r\n    if(redirectTo !== undefined){\r\n      return <Redirect push to={redirectTo} />\r\n    }\r\n\r\n    return (\r\n      <Col  className=\"mt-4 col-sm-4\" onClick={handleClick}>\r\n        <Card className=\"clickable\">\r\n          <div className= \"mx-auto\">\r\n            <img className=\"rounded-circle people_image\" src={people.image}  alt={\"an image for \" + people.fname + \" \" + people.lname}/>\r\n          </div>\r\n          <CardBody className=\"card-body\">\r\n            <CardTitle tag=\"h3\" className=\"name text-center\">{people.fname + \" \" + people.lname}</CardTitle>\r\n            <CardText className=\"card-info\">{\"Major: \" + people.major}</CardText>\r\n            <CardText className=\"card-info\">{\"Interests: \" + people.interests}</CardText>\r\n            <CardLink>Click to learn more!</CardLink>\r\n          </CardBody>\r\n        </Card>\r\n  \r\n      </Col>\r\n    )\r\n  }\r\n\r\n  export function PeopleDetails(props){\r\n    let fullname = useParams().fullname;\r\n    let person =  _.find(props.people, {fname:fullname});\r\n\r\n    return(\r\n      <div>\r\n        <img className=\"people_image\" src={\"../\"+person.image}  alt={\"an image for \" + person.fname + \" \"+ person.lname}/>\r\n        <h2>{person.fname + \" \" + person.lname}</h2>\r\n        <p><strong>Major: </strong>{person.major}</p>\r\n        <p><strong>Interests: </strong>{person.interests}</p>\r\n        <p><strong>Class Standing: </strong>{person.year}</p>\r\n        <p><strong>Email: </strong>{person.email}</p>\r\n        <p><strong>Bio: </strong>{person.bio}</p>\r\n        <BackButton page=\"/people\" />\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\n","D:\\web-dev\\project-2-vishankrug\\src\\components\\Events.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\LandingPage.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\SubmissionPages.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Forms.js",["51","52","53","54","55"],"import React, {useState} from 'react';\r\nimport {Formik, Form, Field} from 'formik';\r\nimport firebase from 'firebase';\r\n\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\nimport {Button} from 'reactstrap';\r\nimport {BackButton} from './Buttons'\r\nimport { faLeaf } from '@fortawesome/free-solid-svg-icons';\r\n//import { DatePicker } from 'react-datepicker';\r\n//import FileUploader from 'react-firebase-file-uploader';\r\n\r\n\r\n\r\nexport function EventsSubmissionForm(){\r\n  \r\n  /* A huge thank you to Tallan Groberg, Code from https://dev.to/itnext/how-to-do-image-upload-with-firebase-in-react-cpj */\r\n\r\n  const allInputs = {imgUrl: \"\"};\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [imageAsFile, setImageAsFile] = useState('');\r\n\r\n  const initialValues = {\r\n    titlea: '', \r\n    hostedBy: '', \r\n    time:'',\r\n    date: '', \r\n    location: '', \r\n    description: '', \r\n    image: '',\r\n    isInterested: '',\r\n  }\r\n\r\n  const handleImageAsFile = (event) => {\r\n    const img = event.target.files[0];\r\n    setImageAsFile((img))\r\n    \r\n  }\r\n\r\n  const onSubmit = (values) =>{\r\n    let databaseRef = firebase.database().ref('events');\r\n    let uploadTask = firebase.storage().ref(`/image/${imageAsFile.name}`).put(imageAsFile);\r\n   \r\n\r\n    databaseRef.push(\r\n      {\r\n        title: values.title,\r\n        hostedBy: values.hostedBy,\r\n        time: values.time,\r\n        date: values.date,\r\n        location: values.location,\r\n        description: values.description,\r\n        image: imageAsFile.name,\r\n        isInterested: false,\r\n        \r\n      }\r\n    );\r\n\r\n    uploadTask.on(\"state_change\",\r\n    (snapshot) => {\r\n      console.log(snapshot)\r\n    }, (err) => {\r\n      console.log(err)\r\n    }, () => {\r\n      firebase.storage().ref(\"images\").child(imageAsFile.name).getDownloadURL().then(fireBaseUrl => {\r\n        setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n\r\n  return(\r\n    <Formik {...{initialValues, onSubmit}}>\r\n      {() => (\r\n        <Form className=\"baseForm\" noValidate>\r\n          \r\n          <label className=\"mt-4\">Title of event</label> <br></br>\r\n          <Field \r\n            type=\"text\"\r\n            id=\"title\"\r\n            name=\"title\"\r\n            /> <br></br>\r\n\r\n          <label className=\"mt-4\">Hosted by</label> <br></br>\r\n          <Field \r\n            type=\"text\"\r\n            id=\"hostedBy\"\r\n            name=\"hostedBy\"\r\n            /> <br></br>\r\n\r\n          <label className=\"mt-4\">Date</label> <br></br>\r\n          <Field\r\n            type=\"date\"\r\n            id=\"date\"\r\n            name=\"date\"\r\n            /> <br></br>\r\n\r\n          <label className=\"mt-4\">Time</label> <br></br>\r\n          <Field \r\n            type=\"time\"\r\n            id=\"time\"\r\n            name=\"time\"\r\n            /> <br></br>\r\n\r\n          <label className=\"mt-4\">Location</label> <br></br>\r\n          <Field \r\n            type=\"text\"\r\n            id=\"location\"\r\n            name=\"location\"\r\n            /> <br></br>\r\n\r\n          <label className=\"mt-4\">Description</label> <br></br>\r\n          <Field \r\n            type=\"textarea\"\r\n            id=\"description\"\r\n            name=\"description\"\r\n            /> <br></br>\r\n\r\n          <label className=\"mt-4\">Upload an image</label> <br></br>\r\n          <input type=\"file\" id=\"image\" name=\"image\" onChange={handleImageAsFile}/><br></br>\r\n         \r\n          \r\n          <Button type=\"submit\" className=\"mt-5\">Submit</Button>\r\n\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\n\r\nexport function PeopleForm(){\r\n  let user = firebase.auth().currentUser;\r\n  //let peopleRef = firebase.database.ref(\"people\");\r\n\r\n  let fnameUpdate = user.displayName.substr(0, user.displayName.indexOf(' '));\r\n  let lnameUpdate = user.displayName.substr(user.displayName.indexOf(' ')+1, user.displayName.length);\r\n\r\n  const initialValues = {\r\n    fname: fnameUpdate, \r\n    lname: lnameUpdate,\r\n    major: \"\",\r\n    interest: \"\",\r\n    year: \"\",\r\n    email: user.email,\r\n    bio: \"\"\r\n  }\r\n\r\n  const handleSubmit = (values) => {\r\n    let databasePeopleRef = firebase.database().ref('people');\r\n    databasePeopleRef.push(\r\n      {\r\n        displayName: user.displayName,\r\n        fname: values.fname,\r\n        lname: values.lname,\r\n        major: values.major,\r\n        interest: values.interest,\r\n        year: values.year,\r\n        email: user.email,\r\n        bio: values.bio,\r\n      }\r\n    );\r\n  }  \r\n\r\n  const allInputs = {imgUrl: \"\"};\r\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\r\n  const [imageAsFile, setImageAsFile] = useState('');\r\n\r\n  const handleImageAsFile = (event) => {\r\n    const img = event.target.files[0];\r\n    setImageAsFile((img))\r\n    \r\n  }\r\n\r\n\r\n  return(\r\n    <Formik {...{initialValues, handleSubmit}}>\r\n    {() => (\r\n      <Form className=\"baseForm\" noValidate>\r\n        \r\n        <label className=\"mt-4\">Display Name</label> <br></br>\r\n        <Field \r\n          type=\"text\"\r\n          id=\"displayName\"\r\n          name=\"displayName\"\r\n          /> <br></br>\r\n\r\n      <label className=\"mt-4\">First Name</label> <br></br>\r\n        <Field \r\n          type=\"text\"\r\n          id=\"fname\"\r\n          name=\"fname\"\r\n          /> <br></br>\r\n\r\n      <label className=\"mt-4\">Last Name</label> <br></br>\r\n        <Field \r\n          type=\"text\"\r\n          id=\"lname\"\r\n          name=\"lname\"\r\n          /> <br></br>\r\n\r\n        <label className=\"mt-4\">Major</label> <br></br>\r\n        <Field \r\n          type=\"text\"\r\n          id=\"major\"\r\n          name=\"major\"\r\n          /> <br></br>\r\n\r\n        <label className=\"mt-4\">Class Standing</label> <br></br>\r\n        <Field\r\n          type=\"text\"\r\n          id=\"year\"\r\n          name=\"year\"\r\n          /> <br></br>\r\n\r\n        <label className=\"mt-4\">Interest</label> <br></br>\r\n        <Field \r\n          type=\"text\"\r\n          id=\"interest\"\r\n          name=\"interest\"\r\n          /> <br></br>\r\n\r\n        <label className=\"mt-4\">Email</label> <br></br>\r\n        <Field \r\n          type=\"text\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          /> <br></br>\r\n\r\n        <label className=\"mt-4\">Bio</label> <br></br>\r\n        <textarea\r\n          id=\"location\"\r\n          name=\"location\"\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          /> <br></br>\r\n\r\n        <label className=\"mt-4\">Upload an image</label> <br></br>\r\n          <input type=\"file\" id=\"image\" name=\"image\" onChange={handleImageAsFile}/><br></br>\r\n\r\n        <Button type=\"submit\">Submit</Button>\r\n        <BackButton/>\r\n      </Form>\r\n    )}\r\n  </Formik>\r\n  )\r\n}",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":34,"column":10,"nodeType":"62","messageId":"63","endLine":34,"endColumn":19},{"ruleId":"60","severity":1,"message":"64","line":63,"column":10,"nodeType":"62","messageId":"63","endLine":63,"endColumn":22},{"ruleId":"60","severity":1,"message":"65","line":68,"column":11,"nodeType":"62","messageId":"63","endLine":68,"endColumn":20},{"ruleId":"60","severity":1,"message":"66","line":77,"column":11,"nodeType":"62","messageId":"63","endLine":77,"endColumn":20},{"ruleId":"60","severity":1,"message":"67","line":9,"column":10,"nodeType":"62","messageId":"63","endLine":9,"endColumn":16},{"ruleId":"60","severity":1,"message":"68","line":20,"column":10,"nodeType":"62","messageId":"63","endLine":20,"endColumn":20},{"ruleId":"60","severity":1,"message":"68","line":167,"column":10,"nodeType":"62","messageId":"63","endLine":167,"endColumn":20},{"ruleId":"60","severity":1,"message":"69","line":167,"column":22,"nodeType":"62","messageId":"63","endLine":167,"endColumn":35},{"ruleId":"60","severity":1,"message":"70","line":168,"column":10,"nodeType":"62","messageId":"63","endLine":168,"endColumn":21},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'peopleEmails' is assigned a value but never used.","'newPerson' is assigned a value but never used.","'peopleRef' is assigned a value but never used.","'faLeaf' is defined but never used.","'imageAsUrl' is assigned a value but never used.","'setImageAsUrl' is assigned a value but never used.","'imageAsFile' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]