[{"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/index.js":"1","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/App.js":"2","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Navigation.js":"3","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/SubmissionPages.js":"4","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/People.js":"5","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/LandingPage.js":"6","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Events.js":"7","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Buttons.js":"8","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Search.js":"9","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Forms.js":"10"},{"size":988,"mtime":1608153756360,"results":"11","hashOfConfig":"12"},{"size":4242,"mtime":1608182329574,"results":"13","hashOfConfig":"12"},{"size":1962,"mtime":1608175143264,"results":"14","hashOfConfig":"12"},{"size":619,"mtime":1608174744212,"results":"15","hashOfConfig":"12"},{"size":4603,"mtime":1608177471891,"results":"16","hashOfConfig":"12"},{"size":1004,"mtime":1608170710187,"results":"17","hashOfConfig":"12"},{"size":6368,"mtime":1608178603236,"results":"18","hashOfConfig":"12"},{"size":1976,"mtime":1608170710185,"results":"19","hashOfConfig":"12"},{"size":1122,"mtime":1607996276345,"results":"20","hashOfConfig":"12"},{"size":6272,"mtime":1608177297747,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"c7jwox",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/index.js",[],["44","45"],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/App.js",["46","47"],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Navigation.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/SubmissionPages.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/People.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/LandingPage.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Events.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Buttons.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Search.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Forms.js",["48","49","50"],"import React, {useState} from 'react';\nimport {Formik, Form, Field} from 'formik';\nimport firebase from 'firebase';\n\nimport 'firebase/database';\nimport 'firebase/auth';\nimport {Button} from 'reactstrap';\nimport {BackButton} from './Buttons'\n//import { faLeaf } from '@fortawesome/free-solid-svg-icons';\n//import { DatePicker } from 'react-datepicker';\n//import FileUploader from 'react-firebase-file-uploader';\n\n\n\nexport function EventsSubmissionForm(){\n  \n  /* A huge thank you to Tallan Groberg, Code from https://dev.to/itnext/how-to-do-image-upload-with-firebase-in-react-cpj */\n\n  const allInputs = {imgUrl: \"\"};\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n  const [imageAsFile, setImageAsFile] = useState('');\n\n  const initialValues = {\n    titlea: '', \n    hostedBy: '', \n    time:'',\n    date: '', \n    location: '', \n    description: '', \n    image: '',\n    isInterested: '',\n  }\n\n  const handleImageAsFile = (event) => {\n    const img = event.target.files[0];\n    setImageAsFile((img))\n    \n  }\n\n  const onSubmit = (values) =>{\n    let databaseRef = firebase.database().ref('events');\n    let uploadTask = firebase.storage().ref(`/image/${imageAsFile.name}`).put(imageAsFile);\n   \n\n    databaseRef.push(\n      {\n        title: values.title,\n        hostedBy: values.hostedBy,\n        time: values.time,\n        date: values.date,\n        location: values.location,\n        description: values.description,\n        image: imageAsFile.name,\n        isInterested: false,\n        \n      }\n    );\n\n    uploadTask.on(\"state_change\",\n    (snapshot) => {\n      console.log(snapshot)\n    }, (err) => {\n      console.log(err)\n    }, () => {\n      firebase.storage().ref(\"images\").child(imageAsFile.name).getDownloadURL().then(fireBaseUrl => {\n        setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n      })\n    })\n\n  }\n\n\n  return(\n    <Formik {...{initialValues, onSubmit}}>\n      {() => (\n        <Form className=\"baseForm\" noValidate>\n          \n          <label className=\"mt-4\">Title of event</label> <br></br>\n          <Field \n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Hosted by</label> <br></br>\n          <Field \n            type=\"text\"\n            id=\"hostedBy\"\n            name=\"hostedBy\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Date</label> <br></br>\n          <Field\n            type=\"date\"\n            id=\"date\"\n            name=\"date\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Time</label> <br></br>\n          <Field \n            type=\"time\"\n            id=\"time\"\n            name=\"time\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Location</label> <br></br>\n          <Field \n            type=\"text\"\n            id=\"location\"\n            name=\"location\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Description</label> <br></br>\n          <Field \n            type=\"textarea\"\n            id=\"description\"\n            name=\"description\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Upload an image</label> <br></br>\n          <input type=\"file\" id=\"image\" name=\"image\" onChange={handleImageAsFile}/><br></br>\n         \n          \n          <Button type=\"submit\" className=\"mt-5\">Submit</Button>\n\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\n\nexport function PeopleForm(props){\n  let user = firebase.auth().currentUser;\n  //let peopleRef = firebase.database.ref(\"people\");\n\n  let keyOfCurrentUser;\n\n  for(let i = 0; i < props.peopleArray.length; i++) {\n    if(props.peopleArray[i].email === user.email){\n      keyOfCurrentUser = props.peopleArray[i].key;\n    }\n  }\n\n  let fnameUpdate = user.displayName.substr(0, user.displayName.indexOf(' '));\n  let lnameUpdate = user.displayName.substr(user.displayName.indexOf(' ')+1, user.displayName.length);\n\n  const initialValues = {\n    fname: fnameUpdate, \n    lname: lnameUpdate,\n    major: user.major,\n    interest: user.interest,\n    year: user.year,\n    email: user.email,\n    bio: user.bio,\n    image: user.image\n  }\n\n  const onSubmit = (values) => {\n\n    const updatePerson = {\n        fname: fnameUpdate,\n        lname: lnameUpdate,\n        major: values.major,\n        interest: values.interest,\n        year: values.year,\n        email: user.email,\n        bio: values.bio,\n        image: imageAsFile.name\n      \n    }\n    firebase.database().ref('people/'+keyOfCurrentUser).update(updatePerson);\n  }  \n\n  const allInputs = {imgUrl: \"\"};\n  const [imageAsUrl, setImageAsUrl] = useState(allInputs);\n  const [imageAsFile, setImageAsFile] = useState('');\n\n  const handleImageAsFile = (event) => {\n    const img = event.target.files[0];\n    setImageAsFile((img))\n    \n  }\n\n\n  return(\n    <Formik {...{initialValues, onSubmit}}>\n    {() => (\n      <Form className=\"baseForm\" noValidate>\n\n      <label className=\"mt-4\">First Name</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"fname\"\n          name=\"fname\"\n          /> <br></br>\n\n      <label className=\"mt-4\">Last Name</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"lname\"\n          name=\"lname\"\n          /> <br></br>\n\n        <label className=\"mt-4\">Major</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"major\"\n          name=\"major\"\n          /> <br></br>\n\n        <label className=\"mt-4\">Class Standing</label> <br></br>\n        <Field\n          type=\"text\"\n          id=\"year\"\n          name=\"year\"\n          /> <br></br>\n\n        <label className=\"mt-4\">Interest</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"interest\"\n          name=\"interest\"\n          /> <br></br>\n\n        <label className=\"mt-4\">Email</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"email\"\n          name=\"email\"\n          /> <br></br>\n\n        <label className=\"mt-4\">Bio</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"bio\"\n          name=\"bio\"\n          /> <br></br>\n\n\n        <label className=\"mt-4\">Upload an image</label> <br></br>\n          <input type=\"file\" id=\"image\" name=\"image\" onChange={handleImageAsFile}/><br></br>\n\n        <Button type=\"submit\">Submit</Button>\n        <BackButton/>\n      </Form>\n    )}\n  </Formik>\n  )\n}",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":35,"column":10,"nodeType":"57","messageId":"58","endLine":35,"endColumn":19},{"ruleId":"59","severity":1,"message":"60","line":66,"column":6,"nodeType":"61","endLine":66,"endColumn":8,"suggestions":"62"},{"ruleId":"55","severity":1,"message":"63","line":20,"column":10,"nodeType":"57","messageId":"58","endLine":20,"endColumn":20},{"ruleId":"55","severity":1,"message":"63","line":176,"column":10,"nodeType":"57","messageId":"58","endLine":176,"endColumn":20},{"ruleId":"55","severity":1,"message":"64","line":176,"column":22,"nodeType":"57","messageId":"58","endLine":176,"endColumn":35},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'user.displayName' and 'user.email'. Either include them or remove the dependency array.","ArrayExpression",["67"],"'imageAsUrl' is assigned a value but never used.","'setImageAsUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [user.displayName, user.email]",{"range":"70","text":"71"},[1999,2001],"[user.displayName, user.email]"]