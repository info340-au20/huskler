<<<<<<< HEAD
[{"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/index.js":"1","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/App.js":"2","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/LandingPage.js":"3","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/People.js":"4","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Navigation.js":"5","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/SubmissionPages.js":"6","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Events.js":"7","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Search.js":"8","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Buttons.js":"9","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Forms.js":"10"},{"size":988,"mtime":1608153756360,"results":"11","hashOfConfig":"12"},{"size":6095,"mtime":1608190722320,"results":"13","hashOfConfig":"12"},{"size":1004,"mtime":1608170710187,"results":"14","hashOfConfig":"12"},{"size":4045,"mtime":1608233648869,"results":"15","hashOfConfig":"12"},{"size":1962,"mtime":1608175143264,"results":"16","hashOfConfig":"12"},{"size":624,"mtime":1608186346880,"results":"17","hashOfConfig":"12"},{"size":5282,"mtime":1608190031655,"results":"18","hashOfConfig":"12"},{"size":1122,"mtime":1607996276345,"results":"19","hashOfConfig":"12"},{"size":1976,"mtime":1608170710185,"results":"20","hashOfConfig":"12"},{"size":5284,"mtime":1608189861123,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"c7jwox",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/index.js",[],["45","46"],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/App.js",["47","48","49","50"],"import React, {useState, useEffect} from 'react';\nimport './CSS/App.css';\nimport {NavBar, Footer} from './components/Navigation.js'\nimport {EventsIndividualPage, EventsMainPage} from './components/Events.js'\nimport { Route, Switch, Redirect} from 'react-router-dom';\nimport {PeopleList, PeopleDetails} from './components/People.js'\nimport firebase from 'firebase';\nimport { LandingPage } from './components/LandingPage.js';\nimport {EventSubmission, EditProfile} from './components/SubmissionPages.js';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\n\n\nconst uiConfig = {\n  signInOptions: [\n    {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      requireDisplayName: true\n    },\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  credentialHelper: 'none',\n  signInFlow: 'popup',\n  callbacks: {\n    signInSuccessWithAuthResult: () => false,\n  },\n\n};\n\nfunction App() {\n\n\n  // Firebase state\n\n  const[user, setUser] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n  let spinnerIcon= <FontAwesomeIcon icon={faSpinner}/>;\n \n  \n  //auth state event listener\n  useEffect( () => { //run after component loads\n    //listen to the the authentication state\n    const authUnregisterFunction = firebase.auth().onAuthStateChanged((firebaseUser) =>{\n      if(firebaseUser){\n        setUser(firebaseUser);\n        setIsLoading(false);\n        if(firebaseUser && firebaseUser.metadata.creationTime === firebaseUser.metadata.lastSignInTime) {\n          const newPerson = {\n            fname: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n            lname: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ')+1, firebaseUser.displayName.length),\n            major: \"-\",\n            interest: \"-\",\n            year: \"-\",\n            email: firebaseUser.email,\n            bio: \"-\",\n            image: \"images/avatar.png\"\n          }\n          firebase.database().ref('people').push(newPerson);\n        }\n      }else{ //not defined, logged out\n        setUser(null)\n      }\n    })\n\n    return function cleanup() {\n      authUnregisterFunction();\n    }\n  }, []) //only run hook on first load\n\n\n\n  const [eventsArray, setEvents] = useState([]); //array\n  const [peopleArray, setPeople] = useState([]);\n  const [interestedEventsFull, setInterested] = useState(eventsArray);\n  \n\n  /////  Gets all data from firebase /////\n  useEffect(() => {\n    const peopleRef = firebase.database().ref(\"people\");\n    const eventRef = firebase.database().ref(\"events\");\n    peopleRef.on(\"value\", (snapshot) => {\n      const peopleObjects = snapshot.val();\n      let peopleKeyArray = Object.keys(peopleObjects);\n      let peopleArray = peopleKeyArray.map((key) => {\n        let singlePeopleObject = peopleObjects[key];\n        singlePeopleObject.key = key;\n        \n        return singlePeopleObject;\n      })\n      setPeople(peopleArray);\n    \n    })\n\n    eventRef.on(\"value\", (snapshot) => {\n      const eventsObject = snapshot.val() //converts to JS value\n      let objectKeyArray = Object.keys(eventsObject);\n      let array = objectKeyArray.map((key) => {\n        let singleEventObject = eventsObject[key];\n        singleEventObject.key = key;\n        \n\n        return singleEventObject;\n      })\n      \n      setEvents(array);\n      setInterested(eventsArray);\n    })\n\n  }, [])\n\n\n    ///// EVENTS: Gets all data from firebase /////\n  \n   \n\n    \n\n    ///// Handle interested /////\n  function handleInterestedClick (eventTitle)  {\n    \n    let user = firebase.auth().currentUser.email;\n\n    let keyOfCurrentUser;\n\n    for(let i = 0; i < peopleArray.length; i++) {\n      if(peopleArray[i].email === user.email){\n        keyOfCurrentUser = peopleArray[i].key;\n      }\n    }\n    \n    const interestedEvents = eventsArray.map((event) => {\n      if(event.title === eventTitle){\n        const refEvents = firebase.database().ref(\"events\").child(event.key)\n        \n        const refInterestedPeople = firebase.database().ref(\"events/\" + event.key + \"/interestedPeople\");\n\n        refInterestedPeople.push(keyOfCurrentUser);\n        refEvents.update({isInterested: !event.isInterested})\n        //event.isInterested = !event.isInterested;\n      }\n      return event;\n    })\n    \n    setInterested(interestedEvents);\n  }\n\n  let content = null;\n/*\n  if(isLoading){\n    return(\n    <div className=\"text-center\">\n      {spinnerIcon}\n    </div>\n    ) \n  }\n*/\n\n  //Log in page\n  if(!user){\n    content = (\n      <LandingPage uiConfig={uiConfig} />\n      \n    )\n\n   \n  // Home page + rest of page\n  }else{\n    content =(\n      <div>\n        <nav>\n          <NavBar />\n         \n        </nav>\n\n        <main>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/people\" render={(routerProps) => (\n              <PeopleList {...routerProps} user={user} peopleArray={peopleArray} ></PeopleList>\n              )} />\n\n              <Route exact path=\"/\" render={(routerProps) => (\n              <EventsMainPage {...routerProps} events={eventsArray} adoptHandleInterestedClick={handleInterestedClick}  ></EventsMainPage>\n            )} />\n\n              <Route path=\"/submit-event\" render={() => (\n              <EventSubmission peopleArray = {peopleArray} />\n              )}/>\n\n              <Route path=\"/event/:eventName\" render={(routerProps) => (\n              <EventsIndividualPage {...routerProps} ></EventsIndividualPage>\n              )}/>\n\n              <Route path=\"/people-edit\" render={() => (\n              <EditProfile user={user} peopleArray={peopleArray}></EditProfile>\n              )}/>\n\n              <Route path=\"/people/:fullname\" render={(routerProps) => (\n              <PeopleDetails {...routerProps} peopleArray={peopleArray}></PeopleDetails>\n              )}/>\n              \n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n          \n        </main>\n\n        <footer>\n          <Footer />\n        </footer>\n\n    </div>\n \n\n    )\n  }\n  return (\n   content\n  );\n}\n\nexport default App;\n","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/LandingPage.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/People.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Navigation.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/SubmissionPages.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Events.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Search.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Buttons.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Forms.js",[],["51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":36,"column":10,"nodeType":"59","messageId":"60","endLine":36,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":37,"column":7,"nodeType":"59","messageId":"60","endLine":37,"endColumn":18},{"ruleId":"57","severity":1,"message":"62","line":74,"column":10,"nodeType":"59","messageId":"60","endLine":74,"endColumn":30},{"ruleId":"63","severity":1,"message":"64","line":109,"column":6,"nodeType":"65","endLine":109,"endColumn":8,"suggestions":"66"},{"ruleId":"53","replacedBy":"67"},{"ruleId":"55","replacedBy":"68"},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'spinnerIcon' is assigned a value but never used.","'interestedEventsFull' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventsArray'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setInterested' needs the current value of 'eventsArray'.","ArrayExpression",["71"],["69"],["70"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [eventsArray]",{"range":"74","text":"75"},[3414,3416],"[eventsArray]"]
=======
[{"D:\\web-dev\\project-2-vishankrug\\src\\index.js":"1","D:\\web-dev\\project-2-vishankrug\\src\\App.js":"2","D:\\web-dev\\project-2-vishankrug\\src\\components\\Search.js":"3","D:\\web-dev\\project-2-vishankrug\\src\\components\\Buttons.js":"4","D:\\web-dev\\project-2-vishankrug\\src\\components\\Navigation.js":"5","D:\\web-dev\\project-2-vishankrug\\src\\components\\People.js":"6","D:\\web-dev\\project-2-vishankrug\\src\\components\\Events.js":"7","D:\\web-dev\\project-2-vishankrug\\src\\components\\LandingPage.js":"8","D:\\web-dev\\project-2-vishankrug\\src\\components\\SubmissionPages.js":"9","D:\\web-dev\\project-2-vishankrug\\src\\components\\Forms.js":"10"},{"size":960,"mtime":1608196372097,"results":"11","hashOfConfig":"12"},{"size":6247,"mtime":1608190792922,"results":"13","hashOfConfig":"12"},{"size":1173,"mtime":1608192742157,"results":"14","hashOfConfig":"12"},{"size":2084,"mtime":1608192679549,"results":"15","hashOfConfig":"12"},{"size":2035,"mtime":1608166072325,"results":"16","hashOfConfig":"12"},{"size":4171,"mtime":1608187418109,"results":"17","hashOfConfig":"12"},{"size":5515,"mtime":1608193769802,"results":"18","hashOfConfig":"12"},{"size":1050,"mtime":1608166288581,"results":"19","hashOfConfig":"12"},{"size":657,"mtime":1608186397428,"results":"20","hashOfConfig":"12"},{"size":5826,"mtime":1608193378667,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ln2idt",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\web-dev\\project-2-vishankrug\\src\\index.js",[],["46","47"],"D:\\web-dev\\project-2-vishankrug\\src\\App.js",["48","49","50","51"],"import React, {useState, useEffect} from 'react';\r\nimport './CSS/App.css';\r\nimport {NavBar, Footer} from './components/Navigation.js'\r\nimport {EventsIndividualPage, EventsMainPage} from './components/Events.js'\r\nimport { Route, Switch, Redirect} from 'react-router-dom';\r\nimport {PeopleList, PeopleDetails} from './components/People.js'\r\nimport firebase from 'firebase';\r\nimport { LandingPage } from './components/LandingPage.js';\r\nimport {EventSubmission, EditProfile} from './components/SubmissionPages.js';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst uiConfig = {\r\n  signInOptions: [\r\n    {\r\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      requireDisplayName: true\r\n    },\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n  ],\r\n  credentialHelper: 'none',\r\n  signInFlow: 'popup',\r\n  callbacks: {\r\n    signInSuccessWithAuthResult: () => false,\r\n  },\r\n\r\n};\r\n\r\nfunction App() {\r\n\r\n\r\n  // Firebase state\r\n\r\n  const[user, setUser] = useState(undefined);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  let spinnerIcon= <FontAwesomeIcon icon={faSpinner}/>;\r\n \r\n  \r\n  //auth state event listener\r\n  useEffect( () => { //run after component loads\r\n    //listen to the the authentication state\r\n    const authUnregisterFunction = firebase.auth().onAuthStateChanged((firebaseUser) =>{\r\n      if(firebaseUser){\r\n        setUser(firebaseUser);\r\n        setIsLoading(false);\r\n        if(firebaseUser && firebaseUser.metadata.creationTime === firebaseUser.metadata.lastSignInTime) {\r\n          const newPerson = {\r\n            fname: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\r\n            lname: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ')+1, firebaseUser.displayName.length),\r\n            major: \"-\",\r\n            interest: \"-\",\r\n            year: \"-\",\r\n            email: firebaseUser.email,\r\n            bio: \"-\",\r\n            image: \"images/avatar.png\"\r\n          }\r\n          firebase.database().ref('people').push(newPerson);\r\n        }\r\n      }else{ //not defined, logged out\r\n        setUser(null)\r\n      }\r\n    })\r\n\r\n    return function cleanup() {\r\n      authUnregisterFunction();\r\n    }\r\n  }, []) //only run hook on first load\r\n\r\n\r\n\r\n  const [eventsArray, setEvents] = useState([]); //array\r\n  const [peopleArray, setPeople] = useState([]);\r\n  const [interestedEventsFull, setInterested] = useState(eventsArray);\r\n  \r\n\r\n  /////  Gets all data from firebase /////\r\n  useEffect(() => {\r\n    const peopleRef = firebase.database().ref(\"people\");\r\n    const eventRef = firebase.database().ref(\"events\");\r\n    peopleRef.on(\"value\", (snapshot) => {\r\n      const peopleObjects = snapshot.val();\r\n      let peopleKeyArray = Object.keys(peopleObjects);\r\n      let peopleArray = peopleKeyArray.map((key) => {\r\n        let singlePeopleObject = peopleObjects[key];\r\n        singlePeopleObject.key = key;\r\n        \r\n        return singlePeopleObject;\r\n      })\r\n      setPeople(peopleArray);\r\n    \r\n    })\r\n\r\n    eventRef.on(\"value\", (snapshot) => {\r\n      const eventsObject = snapshot.val() //converts to JS value\r\n      let objectKeyArray = Object.keys(eventsObject);\r\n      let array = objectKeyArray.map((key) => {\r\n        let singleEventObject = eventsObject[key];\r\n        singleEventObject.key = key;\r\n        \r\n\r\n        return singleEventObject;\r\n      })\r\n      \r\n      setEvents(array);\r\n      setInterested(eventsArray);\r\n    })\r\n\r\n  }, [])\r\n  ///// Handle interested /////\r\n  function handleInterestedClick (eventTitle)  {\r\n    \r\n    let user = firebase.auth().currentUser.email;\r\n\r\n    let keyOfCurrentUser;\r\n\r\n    for(let i = 0; i < peopleArray.length; i++) {\r\n      if(peopleArray[i].email === user.email){\r\n        keyOfCurrentUser = peopleArray[i].key;\r\n      }\r\n    }\r\n    \r\n    const interestedEvents = eventsArray.map((event) => {\r\n      if(event.title === eventTitle){\r\n        const refEvents = firebase.database().ref(\"events\").child(event.key)\r\n        \r\n        const refInterestedPeople = firebase.database().ref(\"events/\" + event.key + \"/interestedPeople\");\r\n        \r\n        refInterestedPeople.push(keyOfCurrentUser);\r\n        refEvents.update({isInterested: !event.isInterested})\r\n        //event.isInterested = !event.isInterested;\r\n      }\r\n      return event;\r\n    })\r\n    \r\n    setInterested(interestedEvents);\r\n  }\r\n\r\n  let content = null;\r\n/*\r\n  if(isLoading){\r\n    return(\r\n    <div className=\"text-center\">\r\n      {spinnerIcon}\r\n    </div>\r\n    ) \r\n  }\r\n*/\r\n\r\n  //Log in page\r\n  if(!user){\r\n    content = (\r\n      <LandingPage uiConfig={uiConfig} />\r\n      \r\n    )\r\n\r\n   \r\n  // Home page + rest of page\r\n  }else{\r\n    content =(\r\n      <div>\r\n        <nav>\r\n          <NavBar />\r\n         \r\n        </nav>\r\n\r\n        <main>\r\n          <div className=\"container\">\r\n            <Switch>\r\n              <Route exact path=\"/people\" render={(routerProps) => (\r\n              <PeopleList {...routerProps} user={user} peopleArray={peopleArray} ></PeopleList>\r\n              )} />\r\n\r\n              <Route exact path=\"/\" render={(routerProps) => (\r\n              <EventsMainPage {...routerProps} events={eventsArray} adoptHandleInterestedClick={handleInterestedClick}  ></EventsMainPage>\r\n            )} />\r\n\r\n              <Route path=\"/submit-event\" render={() => (\r\n              <EventSubmission peopleArray = {peopleArray} />\r\n              )}/>\r\n\r\n              <Route path=\"/event/:eventName\" render={(routerProps) => (\r\n              <EventsIndividualPage {...routerProps} ></EventsIndividualPage>\r\n              )}/>\r\n\r\n              <Route path=\"/people-edit\" render={() => (\r\n              <EditProfile user={user} peopleArray={peopleArray}></EditProfile>\r\n              )}/>\r\n\r\n              <Route path=\"/people/:fullname\" render={(routerProps) => (\r\n              <PeopleDetails {...routerProps} peopleArray={peopleArray}></PeopleDetails>\r\n              )}/>\r\n              \r\n              <Redirect to=\"/\" />\r\n            </Switch>\r\n          </div>\r\n          \r\n        </main>\r\n\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n\r\n    </div>\r\n \r\n\r\n    )\r\n  }\r\n  return (\r\n   content\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\web-dev\\project-2-vishankrug\\src\\components\\Search.js",["52","53"],"import React from 'react';\r\nimport '../CSS/App.css';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\n\r\nexport function SearchBarEvent(props){\r\n\r\n    return(\r\n        <form className=\"form\">\r\n            Event Name: <input type=\"text\" name=\"eventName\" value={props.eventNameState} onChange={props.updateEventNameSearch.bind()}/>\r\n            Hosted By: <input type=\"text\" name=\"hostedBy\" value={props.hostedByState} onChange={props.updateHostedBySearch.bind()}/>\r\n            <Button className=\"button\" className=\"purple-button\" onClick={props.clearEvents}>Clear</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport function SearchBarPage(props){\r\n\r\n    return(\r\n\r\n    <form className=\"form\">\r\n        Name: <input type=\"text\" name=\"name\" value={props.nameState} onChange={props.updateNameSearch.bind()}/>\r\n        Major: <input type=\"text\" name=\"major\" value={props.majorState} onChange={props.updateMajorSearch.bind()}/>\r\n        Interest: <input type=\"text\" name=\"interests\" value={props.interestsState} onChange={props.updateInterestsSearch.bind()}/>\r\n        <Button className=\"button\" className=\"purple-button\" onClick={props.clearPeople}>Clear</Button>\r\n    </form>\r\n    )\r\n  }\r\n","D:\\web-dev\\project-2-vishankrug\\src\\components\\Buttons.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Navigation.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\People.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Events.js",["54"],"import React, {useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {Card, CardText, CardBody, CardFooter, CardLink, CardTitle, Col, Row} from 'reactstrap';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport { BackButton, SubmitEventButton } from './Buttons.js';\r\nimport { Button } from 'reactstrap';\r\nimport { SearchBarEvent } from './Search.js';\r\nimport firebase from 'firebase';\r\nimport '../CSS/App.css';\r\n\r\n\r\nexport function EventsMainPage(props){\r\n\r\n  let adoptHandleInterestedClick = props.adoptHandleInterestedClick;\r\n  let eventsArray = props.events;\r\n  \r\n  let content ='';\r\n\r\n  if(firebase.database().ref(\"events\") === null ){\r\n    content = \r\n      <div>\r\n        <SubmitEventButton />\r\n        <div className=\"mt-5\">\r\n          <h2>There are currently no events at this time. Please check again later!</h2>;\r\n        </div>\r\n      </div>\r\n    \r\n  }else{\r\n   content = <EventsList eventsArray={eventsArray} adoptHandleInterestedClick={adoptHandleInterestedClick}/>;\r\n  }\r\n\r\n  return(\r\n   content\r\n  )\r\n}\r\n\r\nexport function EventsList(props){\r\n\r\n  const [eventNameState, setEventNameSearch] = useState('');\r\n  const [hostedByState, setHostedBySearch] = useState('');\r\n  let eventsArray = props.eventsArray;\r\n  \r\n  let adoptHandleInterestedClick = props.adoptHandleInterestedClick;\r\n  \r\n \r\n  ////// Search function /////\r\n  let filteredEvents = eventsArray.filter((event) => {\r\n    return (event.title.toLowerCase().indexOf(eventNameState.toLowerCase()) !== -1);\r\n  });\r\n\r\n  if(hostedByState !== ''){\r\n    filteredEvents = eventsArray.filter((event) => {\r\n      return (event.hostedBy.toLowerCase().indexOf(hostedByState.toLowerCase()) !== -1);\r\n    })\r\n  }\r\n\r\n  const updateEventNameSearch = (event) => {\r\n    setEventNameSearch(event.target.value);\r\n  }\r\n\r\n  const updateHostedBySearch = (event) => {\r\n    setHostedBySearch(event.target.value);\r\n  }\r\n\r\n  const clearEvents = () => {\r\n    setEventNameSearch('');\r\n    setHostedBySearch('');\r\n  }\r\n\r\n  let eventCards = filteredEvents.map((eventsArray) => {\r\n    return <EventCard key={eventsArray.title} event={eventsArray} adoptHandleInterestedClick={adoptHandleInterestedClick} />\r\n  })\r\n \r\n  ///// Return /////\r\n  return(\r\n    <div>\r\n      <div className=\"search-bar\">\r\n        <SearchBarEvent updateEventNameSearch={updateEventNameSearch} eventNameState={eventNameState} updateHostedBySearch={updateHostedBySearch} hostedByState={hostedByState} clearEvents={clearEvents}></SearchBarEvent>\r\n      </div>\r\n      <SubmitEventButton />\r\n      <h3>Events</h3>\r\n      <Row>\r\n        {eventCards}\r\n      </Row>\r\n    </div>\r\n    \r\n  )\r\n  \r\n}\r\n\r\n//////// EVENT CARD /////////\r\nexport function EventCard(props) {\r\n  \r\n  let event = props.event;\r\n  let adoptHandleInterestedClick = props.adoptHandleInterestedClick;\r\n\r\n\r\n  const[redirectTo, setRedirectTo] = useState(undefined);\r\n\r\n  const handleClick =() => {\r\n    setRedirectTo(\"/event/\" + event.title);\r\n  }\r\n\r\n  if(redirectTo !== undefined){\r\n    return <Redirect push to={redirectTo}/>\r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <Col md=\"6\" className=\"mt-4\">\r\n      <Card>\r\n        <div className=\"image-div\">\r\n          <img className=\"event-images\" src={\"../images/\"+event.image} alt={\"an image for \" + event.title} />\r\n        </div>\r\n        <CardBody className=\"clickable\" onClick={() => handleClick(event.name) }>\r\n\r\n          <CardTitle tag=\"h3\" className=\"text-center\">\r\n            {event.title}\r\n          </CardTitle>\r\n          <CardText className=\"text-center\">\r\n            {\"Hosted by: \" + event.hostedBy}\r\n          </CardText>\r\n          <CardText >\r\n            {(event.description).substring(0,200) +\"...\"} \r\n          </CardText>\r\n          <CardLink href=\"\">Click to learn more!</CardLink>\r\n\r\n        </CardBody>\r\n        <CardFooter> \r\n          <Button onClick={ () => adoptHandleInterestedClick(event.title)}>Interested</Button>\r\n          <p> {event.isInterested ? \"You are interested in this event!\" : <br></br> }</p>\r\n        </CardFooter>\r\n      </Card>\r\n\r\n    </Col>\r\n  )\r\n}\r\n\r\n////// EVENT PAGE /////\r\nexport function EventsIndividualPage(){\r\n  \r\n  const [eventsArray, setEvents] = useState([]); //array\r\n  useEffect(() => {\r\n    const eventRef = firebase.database().ref(\"events\");\r\n    eventRef.on(\"value\", (snapshot) => {\r\n      const eventsObject = snapshot.val() //converts to JS value\r\n      let objectKeyArray = Object.keys(eventsObject);\r\n      let eventsArray = objectKeyArray.map((key) => {\r\n        let singleEventObject = eventsObject[key];\r\n        singleEventObject.key = key;\r\n        return singleEventObject;\r\n      })\r\n      setEvents(eventsArray);\r\n    })\r\n  }, [])\r\n\r\n  \r\n  let eventName = useParams().eventName;\r\n  let event = _.find(eventsArray, {title:eventName});\r\n  let eventLink = '';\r\n  if(!event){\r\n    return <h4>No event that matches</h4>\r\n  }\r\n  if(event.link = \"\"){\r\n    eventLink = \"A link to the event was not provided\";\r\n  }else{\r\n    eventLink = event.link;\r\n  }\r\n  \r\n\r\n  return(\r\n    <div>\r\n      <img src={\"../images/\" + event.image} alt={\"an image of \" + event.title} className=\"event-images-lg mt-5\" />\r\n      <h5>{event.title}</h5>\r\n      <p><strong>Hosted by: </strong>{event.hostedBy}</p>\r\n      <p><strong>Date: </strong>{event.date}</p>\r\n      <p><strong>Time: </strong>{event.time}</p>\r\n      <p><strong>Location: </strong>{event.location}</p>\r\n      <p><strong>Link: </strong>{eventLink}</p>\r\n      <p><strong>Description:</strong> <br></br> {event.description}</p>\r\n    \r\n      <BackButton />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n","D:\\web-dev\\project-2-vishankrug\\src\\components\\LandingPage.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\SubmissionPages.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Forms.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":36,"column":10,"nodeType":"61","messageId":"62","endLine":36,"endColumn":19},{"ruleId":"59","severity":1,"message":"63","line":37,"column":7,"nodeType":"61","messageId":"62","endLine":37,"endColumn":18},{"ruleId":"59","severity":1,"message":"64","line":74,"column":10,"nodeType":"61","messageId":"62","endLine":74,"endColumn":30},{"ruleId":"65","severity":1,"message":"66","line":109,"column":6,"nodeType":"67","endLine":109,"endColumn":8,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":13,"column":40,"nodeType":"71","endLine":13,"endColumn":65},{"ruleId":"69","severity":1,"message":"70","line":26,"column":36,"nodeType":"71","endLine":26,"endColumn":61},{"ruleId":"72","severity":1,"message":"73","line":165,"column":6,"nodeType":"74","messageId":"75","endLine":165,"endColumn":21},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'spinnerIcon' is assigned a value but never used.","'interestedEventsFull' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'eventsArray'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setInterested' needs the current value of 'eventsArray'.","ArrayExpression",["78"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [eventsArray]",{"range":"81","text":"82"},[3522,3524],"[eventsArray]"]
>>>>>>> 4b02a284eae30d75d53a579916d9c8082d87b4d3
