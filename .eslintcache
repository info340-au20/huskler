[{"D:\\web-dev\\project-2-vishankrug\\src\\index.js":"1","D:\\web-dev\\project-2-vishankrug\\src\\App.js":"2","D:\\web-dev\\project-2-vishankrug\\src\\components\\Search.js":"3","D:\\web-dev\\project-2-vishankrug\\src\\components\\Buttons.js":"4","D:\\web-dev\\project-2-vishankrug\\src\\components\\Navigation.js":"5","D:\\web-dev\\project-2-vishankrug\\src\\components\\People.js":"6","D:\\web-dev\\project-2-vishankrug\\src\\components\\Events.js":"7","D:\\web-dev\\project-2-vishankrug\\src\\components\\LandingPage.js":"8","D:\\web-dev\\project-2-vishankrug\\src\\components\\SubmissionPages.js":"9","D:\\web-dev\\project-2-vishankrug\\src\\components\\Forms.js":"10"},{"size":1027,"mtime":1608168856523,"results":"11","hashOfConfig":"12"},{"size":5524,"mtime":1608185324122,"results":"13","hashOfConfig":"12"},{"size":1151,"mtime":1607986290837,"results":"14","hashOfConfig":"12"},{"size":2071,"mtime":1608166187028,"results":"15","hashOfConfig":"12"},{"size":2035,"mtime":1608166072325,"results":"16","hashOfConfig":"12"},{"size":4747,"mtime":1608176982560,"results":"17","hashOfConfig":"12"},{"size":5462,"mtime":1608184598067,"results":"18","hashOfConfig":"12"},{"size":1050,"mtime":1608166288581,"results":"19","hashOfConfig":"12"},{"size":653,"mtime":1608176982561,"results":"20","hashOfConfig":"12"},{"size":6575,"mtime":1608184848320,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ln2idt",{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\web-dev\\project-2-vishankrug\\src\\index.js",[],["44","45"],"D:\\web-dev\\project-2-vishankrug\\src\\App.js",["46","47","48","49"],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Search.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Buttons.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Navigation.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\People.js",["50","51"],"import React from 'react';\r\nimport {Card, CardText, CardBody,CardLink, CardTitle, Col, Row} from 'reactstrap';\r\nimport { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { useParams } from \"react-router-dom\";\r\nimport {BackButton} from './Buttons.js';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport { SearchBarPage } from './Search.js';\r\n\r\n\r\n\r\n\r\nexport function PeopleList(props){\r\n    let people = props.people;\r\n  //search states\r\n  const [nameState, setNameSearch] = useState('');\r\n  const [majorState, setMajorSearch] = useState('');\r\n  const [interestsState, setInterestsSearch] = useState('');\r\n\r\n\r\n  //filter the results by search\r\n  let filteredPeople = people.filter((person) => {\r\n    return (person.fname.toLowerCase().indexOf(nameState.toLowerCase()) !== -1 || person.lname.toLowerCase().indexOf(nameState.toLowerCase())!== -1) || ((person.fname.toLowerCase()+ \" \" + person.lname.toLowerCase()).indexOf(nameState.toLowerCase()) !== -1);\r\n  });\r\n\r\n  if(majorState !== ''){\r\n    filteredPeople = filteredPeople.filter((person) => {\r\n      return (person.major.toLowerCase().indexOf(majorState.toLowerCase()) !== -1);\r\n    });\r\n  }\r\n\r\n  if(interestsState !== ''){\r\n    filteredPeople = filteredPeople.filter((person) => {\r\n      return (person.interests.toLowerCase().indexOf(interestsState.toLowerCase()) !== -1);\r\n    });\r\n  }\r\n\r\n  //setStates\r\n\r\n  const updateNameSearch = (person) => {\r\n    setNameSearch(person.target.value);\r\n  }\r\n\r\n  const updateMajorSearch = (person) => {\r\n    setMajorSearch(person.target.value);\r\n  }\r\n\r\n  const updateInterestsSearch = (person) => {\r\n    setInterestsSearch(person.target.value);\r\n  } \r\n\r\n  const clearPeople = () => {\r\n    setNameSearch('');\r\n    setInterestsSearch('');\r\n    setMajorSearch('');\r\n  }\r\n\r\n    let peopleCards = filteredPeople.map((individual) => {\r\n    return <PeopleCard key={individual.email} people={individual} />\r\n  })\r\n\r\n  \r\n  const postUser = (event) => {\r\n    //event.preventDefault();\r\n\r\n    const newPerson = {\r\n      name: props.user.displayName,\r\n      major: \"-\",\r\n      interest: \"-\",\r\n      year: \"-\",\r\n      email: props.user.email,\r\n      bio: \"-\"\r\n    }\r\n\r\n    const peopleRef = firebase.database().ref('people')\r\n\r\n\r\n  }\r\n\r\n  postUser(props.user);\r\n\r\n  return(\r\n    <div>\r\n      <div className=\"search-bar\">\r\n        <SearchBarPage updateNameSearch={updateNameSearch} nameState={nameState} updateMajorSearch={updateMajorSearch} majorState={majorState} interestsState={interestsState} updateInterestsSearch={updateInterestsSearch} clearPeople={clearPeople} ></SearchBarPage>\r\n      </div>\r\n    <Row>\r\n      {peopleCards}\r\n    </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function PeopleCard(props) {\r\n  \r\n    const [redirectTo, setRedirectTo] = useState(undefined);\r\n\r\n    let people = props.people;\r\n\r\n    const handleClick = () => {\r\n      setRedirectTo(\"/people/\"+people.fname);\r\n    }\r\n\r\n    if(redirectTo !== undefined){\r\n      return <Redirect push to={redirectTo} />\r\n    }\r\n\r\n    return (\r\n      <Col  className=\"mt-4 col-sm-4\" onClick={handleClick}>\r\n        <Card className=\"clickable\">\r\n          <div className= \"mx-auto\">\r\n            <img className=\"rounded-circle people_image\" src={people.image}  alt={\"an image for \" + people.fname + \" \" + people.lname}/>\r\n          </div>\r\n          <CardBody className=\"card-body\">\r\n            <CardTitle tag=\"h3\" className=\"name text-center\">{people.fname + \" \" + people.lname}</CardTitle>\r\n            <CardText className=\"card-info\">{\"Major: \" + people.major}</CardText>\r\n            <CardText className=\"card-info\">{\"Interests: \" + people.interests}</CardText>\r\n            <CardLink>Click to learn more!</CardLink>\r\n          </CardBody>\r\n        </Card>\r\n  \r\n      </Col>\r\n    )\r\n  }\r\n\r\n  export function PeopleDetails(props){\r\n    let fullname = useParams().fullname;\r\n    let person =  _.find(props.people, {fname:fullname});\r\n\r\n    return(\r\n      <div>\r\n        <img className=\"people_image\" src={\"../\"+person.image}  alt={\"an image for \" + person.fname + \" \"+ person.lname}/>\r\n        <h2>{person.fname + \" \" + person.lname}</h2>\r\n        <p><strong>Major: </strong>{person.major}</p>\r\n        <p><strong>Interests: </strong>{person.interests}</p>\r\n        <p><strong>Class Standing: </strong>{person.year}</p>\r\n        <p><strong>Email: </strong>{person.email}</p>\r\n        <p><strong>Bio: </strong>{person.bio}</p>\r\n        <BackButton page=\"/people\" />\r\n        \r\n      </div>\r\n    )\r\n  }\r\n\r\n","D:\\web-dev\\project-2-vishankrug\\src\\components\\Events.js",["52"],"D:\\web-dev\\project-2-vishankrug\\src\\components\\LandingPage.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\SubmissionPages.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Forms.js",["53","54","55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":34,"column":10,"nodeType":"62","messageId":"63","endLine":34,"endColumn":19},{"ruleId":"60","severity":1,"message":"64","line":65,"column":10,"nodeType":"62","messageId":"63","endLine":65,"endColumn":22},{"ruleId":"60","severity":1,"message":"65","line":116,"column":9,"nodeType":"62","messageId":"63","endLine":116,"endColumn":13},{"ruleId":"60","severity":1,"message":"66","line":121,"column":11,"nodeType":"62","messageId":"63","endLine":121,"endColumn":27},{"ruleId":"60","severity":1,"message":"67","line":68,"column":11,"nodeType":"62","messageId":"63","endLine":68,"endColumn":20},{"ruleId":"60","severity":1,"message":"68","line":77,"column":11,"nodeType":"62","messageId":"63","endLine":77,"endColumn":20},{"ruleId":"60","severity":1,"message":"69","line":100,"column":7,"nodeType":"62","messageId":"63","endLine":100,"endColumn":12},{"ruleId":"60","severity":1,"message":"70","line":20,"column":10,"nodeType":"62","messageId":"63","endLine":20,"endColumn":20},{"ruleId":"60","severity":1,"message":"70","line":178,"column":10,"nodeType":"62","messageId":"63","endLine":178,"endColumn":20},{"ruleId":"60","severity":1,"message":"71","line":178,"column":22,"nodeType":"62","messageId":"63","endLine":178,"endColumn":35},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'peopleEmails' is assigned a value but never used.","'user' is assigned a value but never used.","'interestedEvents' is assigned a value but never used.","'newPerson' is assigned a value but never used.","'peopleRef' is assigned a value but never used.","'title' is assigned a value but never used.","'imageAsUrl' is assigned a value but never used.","'setImageAsUrl' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]