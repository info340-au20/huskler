[{"D:\\web-dev\\project-2-vishankrug\\src\\index.js":"1","D:\\web-dev\\project-2-vishankrug\\src\\App.js":"2","D:\\web-dev\\project-2-vishankrug\\src\\Events.js":"3","D:\\web-dev\\project-2-vishankrug\\src\\people.js":"4","D:\\web-dev\\project-2-vishankrug\\src\\People.js":"5","D:\\web-dev\\project-2-vishankrug\\src\\components\\Search.js":"6","D:\\web-dev\\project-2-vishankrug\\src\\components\\Buttons.js":"7","D:\\web-dev\\project-2-vishankrug\\src\\components\\Navigation.js":"8"},{"size":1088,"mtime":1608021744065,"results":"9","hashOfConfig":"10"},{"size":6456,"mtime":1608021769086,"results":"11","hashOfConfig":"10"},{"size":4868,"mtime":1608021744040,"results":"12","hashOfConfig":"10"},{"size":3890,"mtime":1608021744105,"results":"13","hashOfConfig":"10"},{"size":3890,"mtime":1608021744105,"results":"14","hashOfConfig":"10"},{"size":1151,"mtime":1607986290837,"results":"15","hashOfConfig":"10"},{"size":701,"mtime":1608021744044,"results":"16","hashOfConfig":"10"},{"size":2069,"mtime":1608021744142,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ln2idt",{"filePath":"20","messages":"21","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\web-dev\\project-2-vishankrug\\src\\index.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\App.js",["38","39","40","41","42","43"],"D:\\web-dev\\project-2-vishankrug\\src\\Events.js",["44","45","46"],"import React, {useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {NavBar} from './Navigation.js';\r\nimport {Card, CardText, CardBody,CardLink, CardTitle, Col, Row} from 'reactstrap';\r\nimport {useFormik, setNestedObjectValues} from 'formik';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport sample_events from './events.json';\r\nimport { BackButton } from './components/Buttons.js';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport function EventsList(props){\r\n  let interestedCallback = props.interestedCallback;\r\n  let events = props.events;\r\n  let eventCards = events.map((event) => {\r\n    return <EventCard key={events.title} event={event} interestedCallback = {interestedCallback} />\r\n  })\r\n   \r\n  return(\r\n    <Row>\r\n      {eventCards}\r\n    </Row>\r\n\r\n  )\r\n}\r\n\r\nexport function EventCard(props) {\r\n  let interestedCallback = props.interestedCallback;\r\n  let event = props.event;\r\n\r\n  const[redirectTo, setRedirectTo] = useState(undefined);\r\n\r\n  const handleClick =() => {\r\n    setRedirectTo(\"/event/\" + event.title);\r\n  }\r\n\r\n  if(redirectTo !== undefined){\r\n    return <Redirect push to={redirectTo}/>\r\n  }\r\n\r\n  return (\r\n    <Col md=\"6\" className=\"mt-4\">\r\n      <Card tag=\"a\" className=\"clickable\" onClick={handleClick}>\r\n        <div className=\"image-div\">\r\n          <img className=\"event-images\" src={\"images/\" + event.image} alt={\"an image for \" + event.title} />\r\n        </div>\r\n        <CardBody>\r\n          <CardTitle tag=\"h3\" className=\"text-center\">{event.title}</CardTitle>\r\n          <CardText className=\"text-center\">{\"Hosted by: \" + event.hostedBy}</CardText>\r\n          <CardText >{(event.description).substring(0,200) +\"...\"} </CardText>\r\n          <CardLink href=\"\">Click to learn more!</CardLink>\r\n        </CardBody>\r\n      </Card>\r\n\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport function EventPage(props){\r\n  let interestedCallback = props.interestedCallback;\r\n  let eventName = useParams().eventName;\r\n\r\n  let event = _.find(sample_events, {title:eventName});\r\n \r\n  if(!event){\r\n    return <h2>No event that matches</h2>\r\n  }\r\n\r\n\r\n\r\n\r\n  return(\r\n    <div>\r\n      <img src={\"../images/\" + event.image} alt={event.title} className=\"event-images-lg mt-5\" />\r\n      <h2>{event.title}</h2>\r\n      <p><strong>Hosted by: </strong>{event.hostedBy}</p>\r\n      <p><strong>Date: </strong>{event.date}</p>\r\n      <p><strong>Time: </strong>{event.time}</p>\r\n      <p><strong>Location: </strong>{event.location}</p>\r\n      <p><strong>Link: </strong><a href={event.locationLink}>{event.locationLink}</a></p>\r\n      <p><strong>Description:</strong> <br></br> {event.description}</p>\r\n      <Button color=\"primary\" className=\"btn\">Interested!</Button>\r\n      <BackButton page=\"/\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EventSubmission(props){\r\n  \r\n  const  formik = useFormik({\r\n    initialValues: {\r\n      title: '', \r\n      hostedBy: '', \r\n      date: '', \r\n      location: '', \r\n      description: '', \r\n      image: ''\r\n    }\r\n  });\r\n  return(\r\n    <div>\r\n      \r\n      <main>\r\n        <h1 className=\"text-center\">Submit an event</h1>\r\n\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <label>Title of event</label> <br></br>\r\n          <input \r\n                type=\"title\"\r\n                name=\"title\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={setNestedObjectValues.title}\r\n          /> <br></br>\r\n\r\n          <label>Hosted By</label> <br></br>\r\n          <input \r\n                type=\"title\"\r\n                name=\"title\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={setNestedObjectValues.title}\r\n          /> <br></br>\r\n\r\n          <label>Date</label> <br></br>\r\n          <input \r\n                type=\"title\"\r\n                name=\"title\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={setNestedObjectValues.title}\r\n          /> <br></br>\r\n\r\n          <label>Location</label> <br></br>\r\n          <input \r\n                type=\"title\"\r\n                name=\"title\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={setNestedObjectValues.title}\r\n          /> <br></br>\r\n\r\n          <label>Description</label> <br></br>\r\n          <input \r\n                type=\"title\"\r\n                name=\"title\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={setNestedObjectValues.title}\r\n          /> <br></br>\r\n\r\n          <label>Image</label> <br></br>\r\n          <input \r\n                type=\"title\"\r\n                name=\"title\"\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                value={setNestedObjectValues.title}\r\n          /> <br></br>\r\n        </form>\r\n       \r\n      \r\n      </main>\r\n\r\n    </div>\r\n \r\n    \r\n  )\r\n}\r\n\r\n",["47","48"],"D:\\web-dev\\project-2-vishankrug\\src\\people.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\People.js",["49","50"],"import React from 'react';\r\nimport {Card, CardText, CardBody,CardLink, CardTitle, Col, Row} from 'reactstrap';\r\nimport { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { useParams } from \"react-router-dom\";\r\nimport sample_people from './people.json';\r\nimport {BackButton} from './components/Buttons.js';\r\n\r\n\r\n\r\nexport function PeopleList(props){\r\n    let peoples = props.people;\r\n\r\n    let peopleCards = peoples.map((individual) => {\r\n    return <PeopleCard key={individual.email} people={individual} />\r\n  })\r\n   \r\n  return(\r\n    <Row>\r\n      {peopleCards}\r\n    </Row>\r\n\r\n  )\r\n}\r\n\r\nexport function PeopleCard(props) {\r\n  \r\n    const [redirectTo, setRedirectTo] = useState(undefined);\r\n\r\n    let people = props.people;\r\n\r\n    const handleClick = () => {\r\n      setRedirectTo(\"/people/\"+people.fname);\r\n    }\r\n\r\n    if(redirectTo !== undefined){\r\n      return <Redirect push to={redirectTo} />\r\n    }\r\n\r\n    return (\r\n      <Col  className=\"mt-4 col-sm-4\" onClick={handleClick}>\r\n        <Card className=\"clickable\">\r\n          <div className= \"mx-auto\">\r\n            <img className=\"rounded-circle people_image\" src={people.image}  alt={\"an image for \" + people.fname + \" \" + people.lname}/>\r\n          </div>\r\n          <CardBody className=\"card-body\">\r\n            <CardTitle tag=\"h3\" className=\"name text-center\">{people.fname + \" \" + people.lname}</CardTitle>\r\n            <CardText className=\"card-info\">{\"Major: \" + people.major}</CardText>\r\n            <CardText className=\"card-info\">{\"Interests: \" + people.interests}</CardText>\r\n            <CardLink>Click to learn more!</CardLink>\r\n          </CardBody>\r\n        </Card>\r\n  \r\n      </Col>\r\n    )\r\n  }\r\n\r\n  export function PeopleDetails(props){\r\n    const [redirectTo, setRedirectTo] = useState(undefined);\r\n    let fullname = useParams().fullname;\r\n    let person =  _.find(sample_people, {fname:fullname});\r\n\r\n   \r\n\r\n    \r\n    \r\n\r\n    return(\r\n      <div>\r\n        <img className=\"people_image\" src={\"../\"+person.image}  alt={\"an image for \" + person.fname + \" \"+ person.lname}/>\r\n        <h2>{person.fname + \" \" + person.lname}</h2>\r\n        <p><strong>Major: </strong>{person.major}</p>\r\n        <p><strong>Interests: </strong>{person.interests}</p>\r\n        <p><strong>Class Standing: </strong>{person.year}</p>\r\n        <p><strong>Email: </strong>{person.email}</p>\r\n        <p><strong>Bio: </strong>{person.bio}</p>\r\n        <BackButton page=\"/people\" />\r\n        \r\n      </div>\r\n    )\r\n  }","D:\\web-dev\\project-2-vishankrug\\src\\components\\Search.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Buttons.js",["51"],"import React, {useState} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Button} from 'reactstrap';\r\nimport firebase from 'firebase/app';\r\n\r\n\r\nexport function BackButton(props){\r\n  const [redirectTo, setRedirectTo] = useState(undefined);\r\n\r\n  if(redirectTo !== undefined){\r\n    return <Redirect push to={redirectTo} />\r\n  }\r\n\r\n  const handleClick = () => {\r\n    setRedirectTo(props.page);\r\n  }\r\n\r\n  return(\r\n    <Button color=\"secondary\" className=\"ml-3\" onClick={handleClick}>Back</Button>\r\n  )\r\n\r\n}\r\n\r\nexport function LogOutButton(){\r\n  const handleLogOut = () => {\r\n    firebase.auth().signOut()\r\n  }\r\n\r\n  return(\r\n    <Button color=\"primary\" onClick={handleLogOut}/>\r\n  )\r\n}\r\n","D:\\web-dev\\project-2-vishankrug\\src\\components\\Navigation.js",["52","53","54","55"],{"ruleId":"56","severity":1,"message":"57","line":5,"column":20,"nodeType":"58","messageId":"59","endLine":5,"endColumn":23},{"ruleId":"56","severity":1,"message":"60","line":5,"column":25,"nodeType":"58","messageId":"59","endLine":5,"endColumn":28},{"ruleId":"56","severity":1,"message":"61","line":6,"column":35,"nodeType":"58","messageId":"59","endLine":6,"endColumn":39},{"ruleId":"56","severity":1,"message":"62","line":11,"column":9,"nodeType":"58","messageId":"59","endLine":11,"endColumn":21},{"ruleId":"56","severity":1,"message":"63","line":44,"column":10,"nodeType":"58","messageId":"59","endLine":44,"endColumn":20},{"ruleId":"56","severity":1,"message":"64","line":45,"column":10,"nodeType":"58","messageId":"59","endLine":45,"endColumn":19},{"ruleId":"56","severity":1,"message":"65","line":3,"column":9,"nodeType":"58","messageId":"59","endLine":3,"endColumn":15},{"ruleId":"56","severity":1,"message":"66","line":27,"column":7,"nodeType":"58","messageId":"59","endLine":27,"endColumn":25},{"ruleId":"56","severity":1,"message":"66","line":59,"column":7,"nodeType":"58","messageId":"59","endLine":59,"endColumn":25},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"56","severity":1,"message":"71","line":60,"column":12,"nodeType":"58","messageId":"59","endLine":60,"endColumn":22},{"ruleId":"56","severity":1,"message":"72","line":60,"column":24,"nodeType":"58","messageId":"59","endLine":60,"endColumn":37},{"ruleId":"56","severity":1,"message":"73","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":9},{"ruleId":"56","severity":1,"message":"74","line":1,"column":16,"nodeType":"58","messageId":"59","endLine":1,"endColumn":24},{"ruleId":"56","severity":1,"message":"75","line":3,"column":10,"nodeType":"58","messageId":"59","endLine":3,"endColumn":16},{"ruleId":"56","severity":1,"message":"76","line":3,"column":18,"nodeType":"58","messageId":"59","endLine":3,"endColumn":23},{"ruleId":"56","severity":1,"message":"77","line":3,"column":31,"nodeType":"58","messageId":"59","endLine":3,"endColumn":39},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Link' is defined but never used.","'LogOutButton' is defined but never used.","'interested' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'NavBar' is defined but never used.","'interestedCallback' is assigned a value but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'redirectTo' is assigned a value but never used.","'setRedirectTo' is assigned a value but never used.","'_' is defined but never used.","'useState' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]