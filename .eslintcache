[{"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/index.js":"1","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/App.js":"2","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Navigation.js":"3","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/People.js":"4","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Events.js":"5","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/LandingPage.js":"6","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/SubmissionPages.js":"7","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Search.js":"8","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Buttons.js":"9","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Forms.js":"10"},{"size":988,"mtime":1608153756360,"results":"11","hashOfConfig":"12"},{"size":6081,"mtime":1608187009605,"results":"13","hashOfConfig":"12"},{"size":1962,"mtime":1608175143264,"results":"14","hashOfConfig":"12"},{"size":4046,"mtime":1608186750465,"results":"15","hashOfConfig":"12"},{"size":5309,"mtime":1608185744840,"results":"16","hashOfConfig":"12"},{"size":1004,"mtime":1608170710187,"results":"17","hashOfConfig":"12"},{"size":624,"mtime":1608186346880,"results":"18","hashOfConfig":"12"},{"size":1122,"mtime":1607996276345,"results":"19","hashOfConfig":"12"},{"size":1976,"mtime":1608170710185,"results":"20","hashOfConfig":"12"},{"size":5197,"mtime":1608189204326,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"c7jwox",{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/index.js",[],["45","46"],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/App.js",["47","48","49","50","51"],"import React, {useState, useEffect} from 'react';\nimport './CSS/App.css';\nimport {NavBar, Footer} from './components/Navigation.js'\nimport {EventsIndividualPage, EventsMainPage} from './components/Events.js'\nimport { Route, Switch, Redirect} from 'react-router-dom';\nimport {PeopleList, PeopleDetails} from './components/People.js'\nimport firebase from 'firebase';\nimport { LandingPage } from './components/LandingPage.js';\nimport {EventSubmission, EditProfile} from './components/SubmissionPages.js';\n//import 'font-awesome/css/font-awesome.css';\n\n\nconst uiConfig = {\n  signInOptions: [\n    {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      requireDisplayName: true\n    },\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  credentialHelper: 'none',\n  signInFlow: 'popup',\n  callbacks: {\n    signInSuccessWithAuthResult: () => false,\n  },\n\n};\n\nfunction App(props) {\n\n\n  // Firebase state\n\n  const[user, setUser] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n \n  \n  //auth state event listener\n  useEffect( () => { //run after component loads\n    //listen to the the authentication state\n    const authUnregisterFunction = firebase.auth().onAuthStateChanged((firebaseUser) =>{\n      if(firebaseUser){\n        setUser(firebaseUser);\n        setIsLoading(false);\n        if(firebaseUser && firebaseUser.metadata.creationTime === firebaseUser.metadata.lastSignInTime) {\n          const newPerson = {\n            fname: firebaseUser.displayName.substr(0, firebaseUser.displayName.indexOf(' ')),\n            lname: firebaseUser.displayName.substr(firebaseUser.displayName.indexOf(' ')+1, firebaseUser.displayName.length),\n            major: \"-\",\n            interest: \"-\",\n            year: \"-\",\n            email: firebaseUser.email,\n            bio: \"-\",\n            image: \"images/avatar.png\"\n          }\n          firebase.database().ref('people').push(newPerson);\n        }\n      }else{ //not defined, logged out\n        setUser(null)\n      }\n    })\n\n    return function cleanup() {\n      authUnregisterFunction();\n    }\n  }, []) //only run hook on first load\n\n  /*if(isLoading){\n    return(\n    <div className=\"text-center\">\n      <i className=\"fa fa-spinner fa-spin fa-3x\"></i>\n    </div>\n    ) \n  }*/\n\n  const [eventsArray, setEvents] = useState([]); //array\n  const [peopleArray, setPeople] = useState([]);\n  //const [interestedEventsFull, setInterested] = useState(eventsArray);\n  \n\n  /////  Gets all data from firebase /////\n  useEffect(() => {\n    const peopleRef = firebase.database().ref(\"people\");\n    const eventRef = firebase.database().ref(\"events\");\n    peopleRef.on(\"value\", (snapshot) => {\n      const peopleObjects = snapshot.val();\n      let peopleKeyArray = Object.keys(peopleObjects);\n      let peopleArray = peopleKeyArray.map((key) => {\n        let singlePeopleObject = peopleObjects[key];\n        singlePeopleObject.key = key;\n        \n        return singlePeopleObject;\n      })\n      setPeople(peopleArray);\n    \n    })\n\n    eventRef.on(\"value\", (snapshot) => {\n      const eventsObject = snapshot.val() //converts to JS value\n      let objectKeyArray = Object.keys(eventsObject);\n      let array = objectKeyArray.map((key) => {\n        let singleEventObject = eventsObject[key];\n        singleEventObject.key = key;\n        \n\n        return singleEventObject;\n      })\n      \n      setEvents(array);\n      //setInterested(eventsArray);\n    })\n\n  }, [])\n\n  //console.log(eventsArray);\n\n    ///// EVENTS: Gets all data from firebase /////\n  \n   \n\n    \n\n    ///// Handle interested /////\n  function handleInterestedClick (eventTitle)  {\n    \n    let user = firebase.auth().currentUser.email;\n    \n\n\n\n    const interestedEvents = eventsArray.map((event) => {\n      //console.log(\"Props Title: \" + event.title);\n      //console.log(\"Event Title: \" + eventTitle);\n      //console.log(typeof event.key);\n      if(event.title === eventTitle){\n        const refEvents = firebase.database().ref(\"events\").child(event.key);\n        const refPeople =firebase.database().ref(\"people\");\n\n\n\n        //refEvents.update({isInterested: !event.isInterested})\n        //event.isInterested = !event.isInterested;\n      }\n      return event;\n    })\n    \n    //setInterested(interestedEvents);\n  }\n\n  //console.log(interestedEventsFull);\n  \n  \n  let content = null;\n\n  /*\n  if(isLoading){\n    return(\n    <div className=\"text-center\">\n      <i className=\"fa fa-spinner fa-spin fa-3x\"></i>\n    </div>\n    ) \n  }\n*/\n\n\n  //Log in page\n  if(!user){\n    content = (\n      <LandingPage uiConfig={uiConfig} />\n      \n    )\n\n   \n  // Home page + rest of page\n  }else{\n    content =(\n      <div>\n        <nav>\n          <NavBar />\n         \n        </nav>\n\n        <main>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/people\" render={(routerProps) => (\n              <PeopleList {...routerProps} user={user} peopleArray={peopleArray} ></PeopleList>\n              )} />\n\n              <Route exact path=\"/\" render={(routerProps) => (\n              <EventsMainPage {...routerProps} events={eventsArray} adoptHandleInterestedClick={handleInterestedClick}  ></EventsMainPage>\n            )} />\n\n              <Route path=\"/submit-event\" render={() => (\n              <EventSubmission peopleArray = {peopleArray} />\n              )}/>\n\n              <Route path=\"/event/:eventName\" render={(routerProps) => (\n              <EventsIndividualPage {...routerProps} ></EventsIndividualPage>\n              )}/>\n\n              <Route path=\"/people-edit\" render={() => (\n              <EditProfile user={user} peopleArray={peopleArray}></EditProfile>\n              )}/>\n\n              <Route path=\"/people/:fullname\" render={(routerProps) => (\n              <PeopleDetails {...routerProps} peopleArray={peopleArray}></PeopleDetails>\n              )}/>\n              \n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n          \n        </main>\n\n        <footer>\n          <Footer />\n        </footer>\n\n    </div>\n \n\n    )\n  }\n  return (\n   content\n  );\n}\n\nexport default App;\n","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Navigation.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/People.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Events.js",["52"],"import React, {useEffect, useState} from 'react';\nimport _ from 'lodash';\nimport {Card, CardText, CardBody, CardFooter, CardLink, CardTitle, Col, Row} from 'reactstrap';\nimport {Redirect, useParams} from 'react-router-dom';\nimport { BackButton, SubmitEventButton } from './Buttons.js';\nimport { Button } from 'reactstrap';\nimport { SearchBarEvent } from './Search.js';\nimport firebase from 'firebase';\n\n\n\nexport function EventsMainPage(props){\n\n  let adoptHandleInterestedClick = props.adoptHandleInterestedClick;\n  let eventsArray = props.events;\n  \n  \n  let content ='';\n \n\n  \n  \n  if(firebase.database().ref(\"events\") === null ){\n    content = \n      <div>\n        <SubmitEventButton />\n        <div className=\"mt-5\">\n          <h2>There are currently no events at this time. Please check again later!</h2>;\n        </div>\n      </div>\n     \n\n    \n  }else{\n   content = <EventsList eventsArray={eventsArray} adoptHandleInterestedClick={adoptHandleInterestedClick}/>;\n  }\n\n  return(\n   content\n  )\n}\n\nexport function EventsList(props){\n\n  const [eventNameState, setEventNameSearch] = useState('');\n  const [hostedByState, setHostedBySearch] = useState('');\n  let eventsArray = props.eventsArray;\n  \n  let adoptHandleInterestedClick = props.adoptHandleInterestedClick;\n  \n \n  ////// Search function /////\n  let filteredEvents = eventsArray.filter((event) => {\n    return (event.title.toLowerCase().indexOf(eventNameState.toLowerCase()) !== -1);\n  });\n\n  if(hostedByState !== ''){\n    filteredEvents = eventsArray.filter((event) => {\n      return (event.hostedBy.toLowerCase().indexOf(hostedByState.toLowerCase()) !== -1);\n    })\n  }\n\n  const updateEventNameSearch = (event) => {\n    setEventNameSearch(event.target.value);\n  }\n\n  const updateHostedBySearch = (event) => {\n    setHostedBySearch(event.target.value);\n  }\n\n  const clearEvents = () => {\n    setEventNameSearch('');\n    setHostedBySearch('');\n  }\n\n  let eventCards = filteredEvents.map((eventsArray) => {\n    return <EventCard key={eventsArray.title} event={eventsArray} adoptHandleInterestedClick={adoptHandleInterestedClick} />\n  })\n \n  ///// Return /////\n  return(\n    <div>\n      <div className=\"search-bar\">\n        <SearchBarEvent updateEventNameSearch={updateEventNameSearch} eventNameState={eventNameState} updateHostedBySearch={updateHostedBySearch} hostedByState={hostedByState} clearEvents={clearEvents}></SearchBarEvent>\n      </div>\n      <SubmitEventButton />\n      <h3>Events</h3>\n      <Row>\n        {eventCards}\n      </Row>\n    </div>\n    \n  )\n  \n}\n\n//////// EVENT CARD /////////\nexport function EventCard(props) {\n  \n  let event = props.event;\n  let title = event.title;\n  let adoptHandleInterestedClick = props.adoptHandleInterestedClick;\n\n\n  const[redirectTo, setRedirectTo] = useState(undefined);\n\n  const handleClick =() => {\n    setRedirectTo(\"/event/\" + event.title);\n  }\n\n  if(redirectTo !== undefined){\n    return <Redirect push to={redirectTo}/>\n  }\n\n \n\n  return (\n    <Col md=\"6\" className=\"mt-4\">\n      <Card>\n        <div className=\"image-div\">\n          <img className=\"event-images\" src={\"../images/\"+event.image} alt={\"an image for \" + event.title} />\n        </div>\n        <CardBody className=\"clickable\" onClick={() => handleClick(event.name) }>\n\n          <CardTitle tag=\"h3\" className=\"text-center\">\n            {event.title}\n          </CardTitle>\n          <CardText className=\"text-center\">\n            {\"Hosted by: \" + event.hostedBy}\n          </CardText>\n          <CardText >\n            {(event.description).substring(0,200) +\"...\"} \n          </CardText>\n          <CardLink href=\"\">Click to learn more!</CardLink>\n\n        </CardBody>\n        <CardFooter> \n          <Button onClick={ () => adoptHandleInterestedClick(event.title)}>Interested</Button>\n          <p> {event.isInterested ? \"You are interested in this event!\" : <br></br> }</p>\n        </CardFooter>\n      </Card>\n\n    </Col>\n  )\n}\n\n////// EVENT PAGE /////\nexport function EventsIndividualPage(){\n  \n  const [eventsArray, setEvents] = useState([]); //array\n  useEffect(() => {\n    const eventRef = firebase.database().ref(\"events\");\n    eventRef.on(\"value\", (snapshot) => {\n      const eventsObject = snapshot.val() //converts to JS value\n      let objectKeyArray = Object.keys(eventsObject);\n      let eventsArray = objectKeyArray.map((key) => {\n        let singleEventObject = eventsObject[key];\n        singleEventObject.key = key;\n        return singleEventObject;\n      })\n      setEvents(eventsArray);\n    })\n  }, [])\n\n  \n  let eventName = useParams().eventName;\n  let event = _.find(eventsArray, {title:eventName});\n \n  if(!event){\n    return <h4>No event that matches</h4>\n  }\n\n  return(\n    <div>\n      <img src={\"../images/\" + event.image} alt={\"an image of \" + event.title} className=\"event-images-lg mt-5\" />\n      <h5>{event.title}</h5>\n      <p><strong>Hosted by: </strong>{event.hostedBy}</p>\n      <p><strong>Date: </strong>{event.date}</p>\n      <p><strong>Time: </strong>{event.time}</p>\n      <p><strong>Location: </strong>{event.location}</p>\n      <p><strong>Link: </strong><a href={event.locationLink}>{event.locationLink}</a></p>\n      <p><strong>Description:</strong> <br></br> {event.description}</p>\n      <Button color=\"primary\" className=\"btn\">Interested!</Button>\n      <BackButton />\n    </div>\n  )\n}\n\n\n","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/LandingPage.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/SubmissionPages.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Search.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Buttons.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Forms.js",[],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":35,"column":10,"nodeType":"59","messageId":"60","endLine":35,"endColumn":19},{"ruleId":"57","severity":1,"message":"61","line":126,"column":9,"nodeType":"59","messageId":"60","endLine":126,"endColumn":13},{"ruleId":"57","severity":1,"message":"62","line":131,"column":11,"nodeType":"59","messageId":"60","endLine":131,"endColumn":27},{"ruleId":"57","severity":1,"message":"63","line":136,"column":15,"nodeType":"59","messageId":"60","endLine":136,"endColumn":24},{"ruleId":"57","severity":1,"message":"64","line":137,"column":15,"nodeType":"59","messageId":"60","endLine":137,"endColumn":24},{"ruleId":"57","severity":1,"message":"65","line":101,"column":7,"nodeType":"59","messageId":"60","endLine":101,"endColumn":12},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'interestedEvents' is assigned a value but never used.","'refEvents' is assigned a value but never used.","'refPeople' is assigned a value but never used.","'title' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]