[{"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/index.js":"1","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/App.js":"2","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Navigation.js":"3","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/SubmissionPages.js":"4","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/People.js":"5","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/LandingPage.js":"6","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Events.js":"7","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Buttons.js":"8","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Search.js":"9","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Forms.js":"10"},{"size":988,"mtime":1608153756360,"results":"11","hashOfConfig":"12"},{"size":4309,"mtime":1608184977469,"results":"13","hashOfConfig":"12"},{"size":1962,"mtime":1608175143264,"results":"14","hashOfConfig":"12"},{"size":585,"mtime":1608184161784,"results":"15","hashOfConfig":"12"},{"size":4046,"mtime":1608185438520,"results":"16","hashOfConfig":"12"},{"size":1004,"mtime":1608170710187,"results":"17","hashOfConfig":"12"},{"size":6403,"mtime":1608185597875,"results":"18","hashOfConfig":"12"},{"size":1976,"mtime":1608170710185,"results":"19","hashOfConfig":"12"},{"size":1122,"mtime":1607996276345,"results":"20","hashOfConfig":"12"},{"size":4890,"mtime":1608185222690,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"c7jwox",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/index.js",[],["45","46"],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/App.js",["47","48"],"import React, {useState, useEffect} from 'react';\nimport './CSS/App.css';\nimport {NavBar, Footer} from './components/Navigation.js'\nimport {EventsIndividualPage, EventsMainPage} from './components/Events.js'\nimport { Route, Switch, Redirect} from 'react-router-dom';\nimport {PeopleList, PeopleDetails} from './components/People.js'\nimport firebase from 'firebase';\nimport { LandingPage } from './components/LandingPage.js';\nimport {EventSubmission, EditProfile} from './components/SubmissionPages.js';\n//import 'font-awesome/css/font-awesome.css';\n\n\nconst uiConfig = {\n  signInOptions: [\n    {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      requireDisplayName: true\n    },\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  credentialHelper: 'none',\n  signInFlow: 'popup',\n  callbacks: {\n    signInSuccessWithAuthResult: () => false,\n  },\n\n};\n\nfunction App(props) {\n\n\n  // Firebase state\n\n  const[user, setUser] = useState(undefined);\n  const [isLoading, setIsLoading] = useState(true);\n \n  \n  //auth state event listener\n  useEffect( () => { //run after component loads\n    //listen to the the authentication state\n    const authUnregisterFunction = firebase.auth().onAuthStateChanged((firebaseUser) =>{\n      if(firebaseUser){\n        setUser(firebaseUser);\n        console.log(firebaseUser);\n        setIsLoading(false);\n        if(firebaseUser && firebaseUser.metadata.creationTime === firebaseUser.metadata.lastSignInTime) {\n          const newPerson = {\n            fname: user.displayName.substr(0, user.displayName.indexOf(' ')),\n            lname: user.displayName.substr(user.displayName.indexOf(' ')+1, user.displayName.length),\n            major: \"-\",\n            interest: \"-\",\n            year: \"-\",\n            email: user.email,\n            bio: \"-\",\n            image: \"images/avatar.png\"\n          }\n          firebase.database().ref('people').push(newPerson);\n        }\n      }else{ //not defined, logged out\n        setUser(null)\n      }\n    })\n\n    return function cleanup() {\n      authUnregisterFunction();\n    }\n  }, []) //only run hook on first load\n\n  const [peopleArray, setPeople] = useState([]);\n\n\n  useEffect(() => {\n    const peopleRef = firebase.database().ref(\"people\");\n    peopleRef.on(\"value\", (snapshot) => {\n      const peopleObjects = snapshot.val();\n      let peopleKeyArray = Object.keys(peopleObjects);\n      console.log()\n      let peopleArray = peopleKeyArray.map((key) => {\n        let singlePeopleObject = peopleObjects[key];\n        singlePeopleObject.key = key;\n        \n        return singlePeopleObject;\n      })\n      setPeople(peopleArray);\n    \n    })\n  }, [])\n  \n  let content = null;\n\n  /*\n  if(isLoading){\n    return(\n    <div className=\"text-center\">\n      <i className=\"fa fa-spinner fa-spin fa-3x\"></i>\n    </div>\n    ) \n  }\n*/\n\n\n  //Log in page\n  if(!user){\n    content = (\n      <LandingPage uiConfig={uiConfig} />\n      \n    )\n\n  // Home page + rest of page\n  }else{\n    content =(\n      <div>\n        <nav>\n          <NavBar />\n        </nav>\n\n        <main>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/people\" render={(routerProps) => (\n              <PeopleList {...routerProps} user={user} peopleArray={peopleArray} ></PeopleList>\n              )} />\n\n              <Route exact path=\"/\" render={(routerProps) => (\n              <EventsMainPage {...routerProps}  ></EventsMainPage>\n            )} />\n\n              <Route path=\"/submit-event\" render={() => (\n              <EventSubmission />\n              )}/>\n\n              <Route path=\"/event/:eventName\" render={(routerProps) => (\n              <EventsIndividualPage {...routerProps} ></EventsIndividualPage>\n              )}/>\n\n              <Route path=\"/people-edit\" render={() => (\n              <EditProfile user={user} peopleArray={peopleArray}></EditProfile>\n              )}/>\n\n              <Route path=\"/people/:fullname\" render={(routerProps) => (\n              <PeopleDetails {...routerProps} peopleArray={peopleArray}></PeopleDetails>\n              )}/>\n              \n              <Redirect to=\"/\" />\n            </Switch>\n          </div>\n          \n        </main>\n\n        <footer>\n          <Footer />\n        </footer>\n\n    </div>\n \n\n    )\n  }\n  return (\n   content\n  );\n}\n\nexport default App;\n","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Navigation.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/SubmissionPages.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/People.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/LandingPage.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Events.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Buttons.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Search.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Forms.js",["49"],"import React, {useState} from 'react';\nimport {Formik, Form, Field} from 'formik';\nimport firebase from 'firebase';\n\nimport 'firebase/database';\nimport 'firebase/auth';\nimport {Button} from 'reactstrap';\nimport {BackButton} from './Buttons'\n//import { faLeaf } from '@fortawesome/free-solid-svg-icons';\n//import { DatePicker } from 'react-datepicker';\n//import FileUploader from 'react-firebase-file-uploader';\n\n\n\nexport function EventsSubmissionForm(){\n\n  const initialValues = {\n    titlea: '', \n    hostedBy: '', \n    time:'',\n    date: '', \n    location: '', \n    description: '', \n    image: '',\n    isInterested: '',\n  }\n\n\n  const onSubmit = (values) =>{\n    let databaseRef = firebase.database().ref('events');\n   \n\n    databaseRef.push(\n      {\n        title: values.title,\n        hostedBy: values.hostedBy,\n        time: values.time,\n        date: values.date,\n        location: values.location,\n        description: values.description,\n        image: 'temp-background.jpg',\n        isInterested: false,\n        \n      }\n    );\n\n  }\n\n\n  return(\n    <Formik {...{initialValues, onSubmit}}>\n      {() => (\n        <Form className=\"baseForm\" noValidate>\n          \n          <label className=\"mt-4\">Title of event</label> <br></br>\n          <Field \n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Hosted by</label> <br></br>\n          <Field \n            type=\"text\"\n            id=\"hostedBy\"\n            name=\"hostedBy\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Date</label> <br></br>\n          <Field\n            type=\"date\"\n            id=\"date\"\n            name=\"date\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Time</label> <br></br>\n          <Field \n            type=\"time\"\n            id=\"time\"\n            name=\"time\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Location</label> <br></br>\n          <Field \n            type=\"text\"\n            id=\"location\"\n            name=\"location\"\n            /> <br></br>\n\n          <label className=\"mt-4\">Description</label> <br></br>\n          <Field \n            type=\"textarea\"\n            id=\"description\"\n            name=\"description\"\n            /> <br></br>\n          \n          <Button type=\"submit\" className=\"mt-5\">Submit</Button>\n          <BackButton/>\n\n        </Form>\n      )}\n    </Formik>\n  )\n}\n\n\nexport function PeopleForm(props){\n  let user = firebase.auth().currentUser;\n  //let peopleRef = firebase.database.ref(\"people\");\n\n  let keyOfCurrentUser;\n\n  for(let i = 0; i < props.peopleArray.length; i++) {\n    if(props.peopleArray[i].email === user.email){\n      keyOfCurrentUser = props.peopleArray[i].key;\n    }\n  }\n\n  let fnameUpdate = user.displayName.substr(0, user.displayName.indexOf(' '));\n  let lnameUpdate = user.displayName.substr(user.displayName.indexOf(' ')+1, user.displayName.length);\n\n  const initialValues = {\n    fname: fnameUpdate, \n    lname: lnameUpdate,\n    major: user.major,\n    interest: user.interest,\n    year: user.year,\n    email: user.email,\n    bio: user.bio,\n    image: user.image\n  }\n\n  const onSubmit = (values) => {\n\n    const updatePerson = {\n        fname: fnameUpdate,\n        lname: lnameUpdate,\n        major: values.major,\n        interest: values.interest,\n        year: values.year,\n        email: user.email,\n        bio: values.bio,\n        image: 'images/avatar.png'\n      \n    }\n    firebase.database().ref('people/'+keyOfCurrentUser).update(updatePerson);\n  }  \n\n\n  return(\n    <Formik {...{initialValues, onSubmit}}>\n    {() => (\n      <Form className=\"baseForm\" noValidate>\n\n      <label className=\"mt-4\">First Name</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"fname\"\n          name=\"fname\"\n          /> <br></br>\n\n      <label className=\"mt-4\">Last Name</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"lname\"\n          name=\"lname\"\n          /> <br></br>\n\n        <label className=\"mt-4\">Major</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"major\"\n          name=\"major\"\n          /> <br></br>\n\n        <label className=\"mt-4\">Class Standing</label> <br></br>\n        <Field\n          type=\"text\"\n          id=\"year\"\n          name=\"year\"\n          /> <br></br>\n\n        <label className=\"mt-4\">Interest</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"interest\"\n          name=\"interest\"\n          /> <br></br>\n\n        <label className=\"mt-4\">Email</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"email\"\n          name=\"email\"\n          /> <br></br>\n\n        <label className=\"mt-4\">Bio</label> <br></br>\n        <Field \n          type=\"text\"\n          id=\"bio\"\n          name=\"bio\"\n          /> <br></br>\n\n        <Button type=\"submit\">Submit</Button>\n        <BackButton/>\n      </Form>\n    )}\n  </Formik>\n  )\n}",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":35,"column":10,"nodeType":"56","messageId":"57","endLine":35,"endColumn":19},{"ruleId":"58","severity":1,"message":"59","line":67,"column":6,"nodeType":"60","endLine":67,"endColumn":8,"suggestions":"61"},{"ruleId":"54","severity":1,"message":"62","line":1,"column":16,"nodeType":"56","messageId":"57","endLine":1,"endColumn":24},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'user.displayName' and 'user.email'. Either include them or remove the dependency array.","ArrayExpression",["65"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [user.displayName, user.email]",{"range":"68","text":"69"},[2066,2068],"[user.displayName, user.email]"]