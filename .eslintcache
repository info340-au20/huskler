[{"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/index.js":"1","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/App.js":"2","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/Events.js":"3","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Buttons.js":"4","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Search.js":"5","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/people.js":"6","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Navigation.js":"7"},{"size":1050,"mtime":1608003173745,"results":"8","hashOfConfig":"9"},{"size":6452,"mtime":1608008521124,"results":"10","hashOfConfig":"9"},{"size":4702,"mtime":1608005923372,"results":"11","hashOfConfig":"9"},{"size":669,"mtime":1607995348640,"results":"12","hashOfConfig":"9"},{"size":1122,"mtime":1607996276345,"results":"13","hashOfConfig":"9"},{"size":3766,"mtime":1608011788434,"results":"14","hashOfConfig":"9"},{"size":1996,"mtime":1607996300748,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"c7jwox",{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/index.js",[],["34","35"],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/App.js",["36","37","38","39","40","41"],"import React, {useState, useEffect} from 'react';\nimport './CSS/App.css';\nimport {NavBar, Footer} from './components/Navigation.js'\nimport {EventsList, EventSubmission, EventPage} from './Events.js'\nimport {Container, Row, Col} from 'reactstrap'\nimport { Route, Switch, Redirect, Link } from 'react-router-dom';\nimport {PeopleList, PeopleDetails, PeoplePopUp} from './people.js'\nimport { SearchBarPage, SearchBarEvent } from './components/Search.js';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport {LogOutButton} from './components/Buttons.js'\n\nconst uiConfig = {\n  signInOptions: [\n    {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      requireDisplayName: true\n    },\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\n  ],\n  credentialHelper: 'none',\n  signInFlow: 'popup',\n  callbacks: {\n    signInSuccessWithAuthResult: () => false,\n  },\n\n};\n\nfunction App(props) {\n\n  const events = props.events;\n  const people = props.people;\n\n  // Search bar states\n  const [nameState, setNameSearch] = useState('');\n  const [majorState, setMajorSearch] = useState('');\n  const [interestsState, setInterestsSearch] = useState('');\n  const [eventNameState, setEventNameSearch] = useState('');\n  const [hostedByState, setHostedBySearch] = useState('');\n\n  // Firebase state\n\n  const[user, setUser] = useState(undefined);\n  const [interested, setInterested] = useState(events);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Search bar code\n\n  let filteredEvents = events.filter((event) => {\n    return (event.title.toLowerCase().indexOf(eventNameState.toLowerCase()) !== -1);\n  });\n\n  if(hostedByState !== ''){\n    filteredEvents = events.filter((event) => {\n      return (event.hostedBy.toLowerCase().indexOf(hostedByState.toLowerCase()) !== -1);\n    })\n  }\n\n  let filteredPeople = people.filter((person) => {\n    return (person.fname.toLowerCase().indexOf(nameState.toLowerCase()) !== -1 || person.lname.toLowerCase().indexOf(nameState.toLowerCase())!== -1) || ((person.fname.toLowerCase()+ \" \" + person.lname.toLowerCase()).indexOf(nameState.toLowerCase()) !== -1);\n  });\n\n  if(majorState !== ''){\n    filteredPeople = filteredPeople.filter((person) => {\n      return (person.major.toLowerCase().indexOf(majorState.toLowerCase()) !== -1);\n    });\n  }\n\n  if(interestsState !== ''){\n    filteredPeople = filteredPeople.filter((person) => {\n      return (person.interests.toLowerCase().indexOf(interestsState.toLowerCase()) !== -1);\n    });\n  }\n\n  const handleClick = (eventName) => {\n    const transmuted = events.map((event) => {\n      if(events.name === eventName){\n        event.isInterested = !event.isInterested;\n      }\n      return event;\n    })\n    setInterested(transmuted);\n  }\n\n  const updateEventNameSearch = (event) => {\n    setEventNameSearch(event.target.value);\n  }\n\n  const updateHostedBySearch = (event) => {\n    setHostedBySearch(event.target.value);\n  }\n\n  const updateNameSearch = (person) => {\n    setNameSearch(person.target.value);\n  }\n\n  const updateMajorSearch = (person) => {\n    setMajorSearch(person.target.value);\n  }\n\n  const updateInterestsSearch = (person) => {\n    setInterestsSearch(person.target.value);\n  } \n\n  const clearPeople = () => {\n    setNameSearch('');\n    setInterestsSearch('');\n    setMajorSearch('');\n  }\n\n  const clearEvents = () => {\n    setEventNameSearch('');\n    setHostedBySearch('');\n  }\n\n  //auth state event listener\n  useEffect( () => { //run after component loads\n    //listen to the the authentication state\n    const authUnregisterFunction = firebase.auth().onAuthStateChanged((firebaseUser) =>{\n      if(firebaseUser){\n        console.log(\"logged in as: \" + firebaseUser.displayName)\n        setUser(firebaseUser)\n        setIsLoading(false);\n      }else{ //not defined, logged out\n        setUser(null)\n      }\n    })\n\n    return function cleanup() {\n      authUnregisterFunction();\n    }\n  }, []) //only run hook on first load\n\n\n  const handleSignout = () => {\n    firebase.auth().signOut()\n  }\n\n  if(isLoading){\n    return(\n    <div className=\"text-center\">\n      <i className=\"fa fa-spinner fa-spin fa-3x\"></i>\n    </div>\n    ) \n  }\n\n  let content = null;\n\n  if(!user){\n    content = (\n      <Container>\n        <h1>Sign Up</h1>\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n      </Container>\n    )\n  }else{\n    content =(\n      <div>\n        <nav>\n          <NavBar />\n        \n        </nav>\n\n\n        <main>\n          \n\n          <div className=\"container\">\n            <div className=\"search-bar\">\n            <Route exact path=\"/people\" render={() => (\n              <SearchBarPage updateNameSearch={updateNameSearch} nameState={nameState} updateMajorSearch={updateMajorSearch} majorState={majorState} interestsState={interestsState} updateInterestsSearch={updateInterestsSearch} clearPeople={clearPeople} ></SearchBarPage>\n            )} />\n            <Route exact path=\"/\" render={() => (\n              <SearchBarEvent updateEventNameSearch={updateEventNameSearch} eventNameState={eventNameState} updateHostedBySearch={updateHostedBySearch} hostedByState={hostedByState} clearEvents={clearEvents}></SearchBarEvent>\n            )} />\n            </div>\n            <Switch>\n              \n            <Route exact path=\"/people\" render={(routerProps) => (\n            <PeopleList {...routerProps} user={user} people={filteredPeople}></PeopleList>\n            )} />\n\n          <Route exact path=\"/\" render={(routerProps) => (\n            <EventsList {...routerProps} events={filteredEvents} interestedCallback={handleClick}></EventsList>\n          )} />\n          \n\n          <Route path=\"/submit-events\" component={EventSubmission} />\n\n          <Route path=\"/event/:eventName\" render={(routerProps) => (\n            <EventPage {...routerProps} events={events}></EventPage>\n          )}/>\n\n          <Route exact path=\"/people/edit\" render={(routerProps) => (\n            <PeoplePopUp {...routerProps} user={user} people={people}></PeoplePopUp>\n          )}/>\n\n          <Route path=\"/people/:fullname\" render={(routerProps) => (\n            <PeopleDetails {...routerProps} people={people}></PeopleDetails>\n          )}/>\n\n          <Redirect to=\"/\" />\n        </Switch>\n          \n            \n          </div>\n        </main>\n\n        <footer>\n          <Footer />\n        </footer>\n\n    </div>\n \n\n    )\n  }\n  return (\n   content\n  );\n}\n\nexport default App;\n","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/Events.js",["42","43"],"import React, {useState} from 'react';\nimport _ from 'lodash';\nimport {Card, CardText, CardBody,CardLink, CardTitle, Col, Row} from 'reactstrap';\nimport {useFormik, setNestedObjectValues} from 'formik';\nimport {Redirect, useParams} from 'react-router-dom';\nimport { BackButton } from './components/Buttons.js';\nimport { Button } from 'reactstrap';\n\nexport function EventsList(props){\n  let interestedCallback = props.interestedCallback;\n  let events = props.events;\n  let eventCards = events.map((event) => {\n    return <EventCard key={events.title} event={event} interestedCallback = {interestedCallback} />\n  })\n   \n  return(\n    <Row>\n      {eventCards}\n    </Row>\n\n  )\n}\n\nexport function EventCard(props) {\n  let interestedCallback = props.interestedCallback;\n  let event = props.event;\n\n  const[redirectTo, setRedirectTo] = useState(undefined);\n\n  const handleClick =() => {\n    setRedirectTo(\"/event/\" + event.title);\n  }\n\n  if(redirectTo !== undefined){\n    return <Redirect push to={redirectTo}/>\n  }\n\n  return (\n    <Col md=\"6\" className=\"mt-4\">\n      <Card tag=\"a\" className=\"clickable\" onClick={handleClick}>\n        <div className=\"image-div\">\n          <img className=\"event-images\" src={\"images/\" + event.image} alt={\"an image for \" + event.title} />\n        </div>\n        <CardBody>\n          <CardTitle tag=\"h3\" className=\"text-center\">{event.title}</CardTitle>\n          <CardText className=\"text-center\">{\"Hosted by: \" + event.hostedBy}</CardText>\n          <CardText >{(event.description).substring(0,200) +\"...\"} </CardText>\n          <CardLink href=\"\">Click to learn more!</CardLink>\n        </CardBody>\n      </Card>\n\n    </Col>\n  )\n}\n\nexport function EventPage(props){\n  let interestedCallback = props.interestedCallback;\n  let eventName = useParams().eventName;\n  let event = _.find(props.events, {title:eventName});\n \n  if(!event){\n    return <h2>No event that matches</h2>\n  }\n\n\n\n\n  return(\n    <div>\n      <img src={\"../images/\" + event.image} alt={event.title} className=\"event-images-lg mt-5\" />\n      <h2>{event.title}</h2>\n      <p><strong>Hosted by: </strong>{event.hostedBy}</p>\n      <p><strong>Date: </strong>{event.date}</p>\n      <p><strong>Time: </strong>{event.time}</p>\n      <p><strong>Location: </strong>{event.location}</p>\n      <p><strong>Link: </strong><a href={event.locationLink}>{event.locationLink}</a></p>\n      <p><strong>Description:</strong> <br></br> {event.description}</p>\n      <Button color=\"primary\" className=\"btn\">Interested!</Button>\n      <BackButton page=\"/\" />\n    </div>\n  )\n}\n\nexport function EventSubmission(props){\n  \n  const  formik = useFormik({\n    initialValues: {\n      title: '', \n      hostedBy: '', \n      date: '', \n      location: '', \n      description: '', \n      image: ''\n    }\n  });\n  return(\n    <div>\n      \n      <main>\n        <h1 className=\"text-center\">Submit an event</h1>\n\n        <form onSubmit={formik.handleSubmit}>\n          <label>Title of event</label> <br></br>\n          <input \n                type=\"title\"\n                name=\"title\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={setNestedObjectValues.title}\n          /> <br></br>\n\n          <label>Hosted By</label> <br></br>\n          <input \n                type=\"title\"\n                name=\"title\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={setNestedObjectValues.title}\n          /> <br></br>\n\n          <label>Date</label> <br></br>\n          <input \n                type=\"title\"\n                name=\"title\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={setNestedObjectValues.title}\n          /> <br></br>\n\n          <label>Location</label> <br></br>\n          <input \n                type=\"title\"\n                name=\"title\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={setNestedObjectValues.title}\n          /> <br></br>\n\n          <label>Description</label> <br></br>\n          <input \n                type=\"title\"\n                name=\"title\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={setNestedObjectValues.title}\n          /> <br></br>\n\n          <label>Image</label> <br></br>\n          <input \n                type=\"title\"\n                name=\"title\"\n                onChange={formik.handleChange}\n                onBlur={formik.handleBlur}\n                value={setNestedObjectValues.title}\n          /> <br></br>\n        </form>\n       \n      \n      </main>\n\n    </div>\n \n    \n  )\n}\n\n","/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Buttons.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Search.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/people.js",[],"/Users/vishankrughwani/Desktop/UW/Fall_2020/INFO_340/project-2-vishankrug/src/components/Navigation.js",["44","45","46","47"],"import React, {useState} from 'react';\nimport '../CSS/App.css';\nimport { Switch, Route, Link, Redirect, NavLink, useLocation } from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport { faHome, faUsers } from '@fortawesome/free-solid-svg-icons';\nimport {LogOutButton} from './Buttons.js';\n\n\nexport function NavBar(){\n  let homeIcon= <FontAwesomeIcon icon={faHome}/>;\n  let peopleIcon = <FontAwesomeIcon icon={faUsers}/>;\n  return(\n    \n    <div className=\"navbar-flex\">\n      <div className=\"navbar-child-a mx-2\">\n        <NavLink className=\"navbar-navlink\" exact to=\"/\">huskler</NavLink>\n      </div>\n\n      <div className=\"navbar-child-b mx-2\">\n        <ul className=\"list-unstyled\">\n          <li className=\"navbar-list\">\n            <NavLink exact to=\"/\" activeClassName=\"activeLink\" className=\"navbar-navlink icons\">{homeIcon}</NavLink>\n          </li>\n          <li className=\"navbar-list\">\n            <NavLink exact to=\"/people\" activeClassName=\"activeLink\" className=\"navbar-navlink icons\">{peopleIcon}</NavLink>\n          </li>\n        </ul> \n      </div>\n      <div className=\"navbar-child-c mx-2\">\n        <LogOutButton />\n      \n      </div>\n    </div>\n\n  )\n}\n\nexport function Footer(){\n  return(\n    <div className=\"mt-5\">\n      <hr></hr>\n      <p className=\"ml-5\">Copyright &copy; 2020 Vishank Rughwani and Sam Quiambao. All rights reserved.  </p>\n    </div>\n  )\n}\n\n\nexport function MainBar(props){\n\n  let location = useLocation().pathname;\n  console.log(location);\n  \n  \n  if(location === '/submit-events'){\n    return(\n      <div className=\"flex-nav-submission-back\"><Link exact to=\"/\" className=\"btn btn-primary\">Go back</Link></div>\n    )\n  }else if(location === '/'){\n    return(\n      <div className=\"flex-nav-submission\">\n        <div>\n          <Link to=\"/submit-events\" className=\"btn btn-primary\" >Submit Events</Link>\n        </div>\n      </div>\n\n    )\n    \n  }else{\n    return(\n      <p>You've messed up, buckaroo</p>\n    )\n  }\n}\n",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":20,"nodeType":"54","messageId":"55","endLine":5,"endColumn":23},{"ruleId":"52","severity":1,"message":"56","line":5,"column":25,"nodeType":"54","messageId":"55","endLine":5,"endColumn":28},{"ruleId":"52","severity":1,"message":"57","line":6,"column":35,"nodeType":"54","messageId":"55","endLine":6,"endColumn":39},{"ruleId":"52","severity":1,"message":"58","line":11,"column":9,"nodeType":"54","messageId":"55","endLine":11,"endColumn":21},{"ruleId":"52","severity":1,"message":"59","line":44,"column":10,"nodeType":"54","messageId":"55","endLine":44,"endColumn":20},{"ruleId":"52","severity":1,"message":"60","line":135,"column":9,"nodeType":"54","messageId":"55","endLine":135,"endColumn":22},{"ruleId":"52","severity":1,"message":"61","line":25,"column":7,"nodeType":"54","messageId":"55","endLine":25,"endColumn":25},{"ruleId":"52","severity":1,"message":"61","line":57,"column":7,"nodeType":"54","messageId":"55","endLine":57,"endColumn":25},{"ruleId":"52","severity":1,"message":"62","line":1,"column":16,"nodeType":"54","messageId":"55","endLine":1,"endColumn":24},{"ruleId":"52","severity":1,"message":"63","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":16},{"ruleId":"52","severity":1,"message":"64","line":3,"column":18,"nodeType":"54","messageId":"55","endLine":3,"endColumn":23},{"ruleId":"52","severity":1,"message":"65","line":3,"column":31,"nodeType":"54","messageId":"55","endLine":3,"endColumn":39},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Link' is defined but never used.","'LogOutButton' is defined but never used.","'interested' is assigned a value but never used.","'handleSignout' is assigned a value but never used.","'interestedCallback' is assigned a value but never used.","'useState' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]