[{"D:\\web-dev\\project-2-vishankrug\\src\\index.js":"1","D:\\web-dev\\project-2-vishankrug\\src\\App.js":"2","D:\\web-dev\\project-2-vishankrug\\src\\components\\Search.js":"3","D:\\web-dev\\project-2-vishankrug\\src\\components\\Buttons.js":"4","D:\\web-dev\\project-2-vishankrug\\src\\components\\Navigation.js":"5","D:\\web-dev\\project-2-vishankrug\\src\\components\\People.js":"6","D:\\web-dev\\project-2-vishankrug\\src\\components\\Events.js":"7"},{"size":1088,"mtime":1608021744065,"results":"8","hashOfConfig":"9"},{"size":6500,"mtime":1608032681531,"results":"10","hashOfConfig":"9"},{"size":1151,"mtime":1607986290837,"results":"11","hashOfConfig":"9"},{"size":1820,"mtime":1608033263000,"results":"12","hashOfConfig":"9"},{"size":2073,"mtime":1608024749352,"results":"13","hashOfConfig":"9"},{"size":3879,"mtime":1608022593707,"results":"14","hashOfConfig":"9"},{"size":4906,"mtime":1608036433878,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1ln2idt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"18"},"D:\\web-dev\\project-2-vishankrug\\src\\index.js",[],["36","37"],"D:\\web-dev\\project-2-vishankrug\\src\\App.js",["38","39","40","41"],"import React, {useState, useEffect} from 'react';\r\nimport './CSS/App.css';\r\nimport {NavBar, Footer} from './components/Navigation.js'\r\nimport {EventsList, EventSubmission, EventPage} from './components/Events.js'\r\nimport {Container} from 'reactstrap'\r\nimport { Route, Switch, Redirect, Link } from 'react-router-dom';\r\nimport {PeopleList, PeopleDetails, PeoplePopUp} from './components/People.js'\r\nimport { SearchBarPage, SearchBarEvent } from './components/Search.js';\r\nimport firebase from 'firebase';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport { SubmitEventButton } from './components/Buttons';\r\n\r\n\r\nconst uiConfig = {\r\n  signInOptions: [\r\n    {\r\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n      requireDisplayName: true\r\n    },\r\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n  ],\r\n  credentialHelper: 'none',\r\n  signInFlow: 'popup',\r\n  callbacks: {\r\n    signInSuccessWithAuthResult: () => false,\r\n  },\r\n\r\n};\r\n\r\nfunction App(props) {\r\n\r\n  const events = props.events;\r\n  const people = props.people;\r\n\r\n  // Search bar states\r\n  const [nameState, setNameSearch] = useState('');\r\n  const [majorState, setMajorSearch] = useState('');\r\n  const [interestsState, setInterestsSearch] = useState('');\r\n  const [eventNameState, setEventNameSearch] = useState('');\r\n  const [hostedByState, setHostedBySearch] = useState('');\r\n\r\n  // Firebase state\r\n\r\n  const[user, setUser] = useState(undefined);\r\n  const [interested, setInterested] = useState(events);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // Search bar code\r\n\r\n  let filteredEvents = events.filter((event) => {\r\n    return (event.title.toLowerCase().indexOf(eventNameState.toLowerCase()) !== -1);\r\n  });\r\n\r\n  if(hostedByState !== ''){\r\n    filteredEvents = events.filter((event) => {\r\n      return (event.hostedBy.toLowerCase().indexOf(hostedByState.toLowerCase()) !== -1);\r\n    })\r\n  }\r\n\r\n  let filteredPeople = people.filter((person) => {\r\n    return (person.fname.toLowerCase().indexOf(nameState.toLowerCase()) !== -1 || person.lname.toLowerCase().indexOf(nameState.toLowerCase())!== -1) || ((person.fname.toLowerCase()+ \" \" + person.lname.toLowerCase()).indexOf(nameState.toLowerCase()) !== -1);\r\n  });\r\n\r\n  if(majorState !== ''){\r\n    filteredPeople = filteredPeople.filter((person) => {\r\n      return (person.major.toLowerCase().indexOf(majorState.toLowerCase()) !== -1);\r\n    });\r\n  }\r\n\r\n  if(interestsState !== ''){\r\n    filteredPeople = filteredPeople.filter((person) => {\r\n      return (person.interests.toLowerCase().indexOf(interestsState.toLowerCase()) !== -1);\r\n    });\r\n  }\r\n\r\n  const handleClick = (eventName) => {\r\n    const transmuted = events.map((event) => {\r\n      if(events.name === eventName){\r\n        event.isInterested = !event.isInterested;\r\n      }\r\n      return event;\r\n    })\r\n    setInterested(transmuted);\r\n  }\r\n\r\n  const updateEventNameSearch = (event) => {\r\n    setEventNameSearch(event.target.value);\r\n  }\r\n\r\n  const updateHostedBySearch = (event) => {\r\n    setHostedBySearch(event.target.value);\r\n  }\r\n\r\n  const updateNameSearch = (person) => {\r\n    setNameSearch(person.target.value);\r\n  }\r\n\r\n  const updateMajorSearch = (person) => {\r\n    setMajorSearch(person.target.value);\r\n  }\r\n\r\n  const updateInterestsSearch = (person) => {\r\n    setInterestsSearch(person.target.value);\r\n  } \r\n\r\n  const clearPeople = () => {\r\n    setNameSearch('');\r\n    setInterestsSearch('');\r\n    setMajorSearch('');\r\n  }\r\n\r\n  const clearEvents = () => {\r\n    setEventNameSearch('');\r\n    setHostedBySearch('');\r\n  }\r\n\r\n  //auth state event listener\r\n  useEffect( () => { //run after component loads\r\n    //listen to the the authentication state\r\n    const authUnregisterFunction = firebase.auth().onAuthStateChanged((firebaseUser) =>{\r\n      if(firebaseUser){\r\n        console.log(\"logged in as: \" + firebaseUser.displayName)\r\n        setUser(firebaseUser)\r\n        setIsLoading(false);\r\n      }else{ //not defined, logged out\r\n        setUser(null)\r\n      }\r\n    })\r\n\r\n    return function cleanup() {\r\n      authUnregisterFunction();\r\n    }\r\n  }, []) //only run hook on first load\r\n\r\n  let content = null;\r\n\r\n  if(!user){\r\n    content = (\r\n      <Container>\r\n        <h1>Sign Up</h1>\r\n        <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n      </Container>\r\n    )\r\n  }else{\r\n    content =(\r\n      <div>\r\n        <nav>\r\n          <NavBar />\r\n        \r\n        </nav>\r\n\r\n\r\n        <main>\r\n          \r\n\r\n          <div className=\"container\">\r\n            <div className=\"search-bar\">\r\n            <Route exact path=\"/people\" render={() => (\r\n              <SearchBarPage updateNameSearch={updateNameSearch} nameState={nameState} updateMajorSearch={updateMajorSearch} majorState={majorState} interestsState={interestsState} updateInterestsSearch={updateInterestsSearch} clearPeople={clearPeople} ></SearchBarPage>\r\n            )} />\r\n            <Route exact path=\"/\" render={() => (\r\n              <SearchBarEvent updateEventNameSearch={updateEventNameSearch} eventNameState={eventNameState} updateHostedBySearch={updateHostedBySearch} hostedByState={hostedByState} clearEvents={clearEvents}></SearchBarEvent>\r\n            )} />\r\n            </div>\r\n            <Switch>\r\n              \r\n            <Route exact path=\"/people\" render={(routerProps) => (\r\n            <PeopleList {...routerProps} user={user} people={filteredPeople}></PeopleList>\r\n            )} />\r\n\r\n          <Route exact path=\"/\" render={(routerProps) => (\r\n            <EventsList {...routerProps} events={filteredEvents} interestedCallback={handleClick}></EventsList>\r\n          )} />\r\n\r\n          \r\n          <Route path=\"/submit-event\" render={() => (\r\n            <EventSubmission />\r\n          )}/>\r\n\r\n          <Route path=\"/event/:eventName\" render={(routerProps) => (\r\n            <EventPage {...routerProps} events={events}></EventPage>\r\n          )}/>\r\n\r\n          <Route path=\"/people/edit\" render={(routerProps) => (\r\n            <PeoplePopUp {...routerProps} user={user} people={people}></PeoplePopUp>\r\n          )}/>\r\n\r\n          <Route path=\"/people/:fullname\" render={(routerProps) => (\r\n            <PeopleDetails {...routerProps} people={people}></PeopleDetails>\r\n          )}/>\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n          \r\n            \r\n          </div>\r\n        </main>\r\n\r\n        <footer>\r\n          <Footer />\r\n        </footer>\r\n\r\n    </div>\r\n \r\n\r\n    )\r\n  }\r\n  return (\r\n   content\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\web-dev\\project-2-vishankrug\\src\\components\\Search.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Buttons.js",["42","43","44"],"import React, {useState} from 'react';\r\nimport { Link, Redirect, Route } from 'react-router-dom';\r\nimport {Button, Dropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\r\nimport firebase from 'firebase/app';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport '../CSS/App.css'\r\nimport { EventSubmission } from './Events';\r\n\r\n\r\n\r\n\r\nexport function BackButton(props){\r\n\r\n\r\n  return(\r\n    <Link to={props.page}>\r\n      <Button color=\"secondary\" className=\"ml-3\">Back</Button>\r\n    </Link>\r\n    \r\n  )\r\n\r\n}\r\n\r\nexport function SubmitEventButton(){\r\n\r\n  return(\r\n    <div className=\"d-flex justify-content-end\">\r\n      <Link to=\"/submit-event\">\r\n        <Button className=\"mt-4 \" >Submit Event</Button>\r\n      </Link>\r\n    </div>\r\n    \r\n    \r\n  )\r\n\r\n}\r\n\r\nexport function LogOutButton(){\r\n  const handleLogOut = () => {\r\n    firebase.auth().signOut()\r\n  }\r\n\r\n  return(\r\n    <DropdownItem onClick={handleLogOut} className=\"clickable\">Log Out</DropdownItem>\r\n  )\r\n}\r\n\r\nexport function EditProfileButton(){\r\n  const handleProfilePageRedirect = () => {\r\n\r\n  }\r\n\r\n  return(\r\n    <DropdownItem onClick={handleProfilePageRedirect} className=\"clickable\">Edit Profile</DropdownItem>\r\n  )\r\n}\r\n\r\nexport function UserMenuButton(){\r\n  let userIcon= <FontAwesomeIcon icon={faUser}/>;\r\n  const[dropdownOpen, setDropdownOpen] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setDropdownOpen(prevState => !prevState);\r\n  }\r\n\r\n  return(\r\n    <Dropdown isOpen={dropdownOpen} toggle={toggle} >\r\n      <DropdownToggle className=\"navbar-navlink bg-secondary\">\r\n        {userIcon}\r\n      </DropdownToggle>\r\n      <DropdownMenu right>\r\n        <EditProfileButton />\r\n        <LogOutButton />\r\n    \r\n      </DropdownMenu>\r\n    </Dropdown>\r\n  )\r\n}\r\n\r\n",["45","46"],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Navigation.js",["47","48","49","50"],"import React, {useState} from 'react';\r\nimport '../CSS/App.css';\r\nimport { Switch, Route, Link, Redirect, NavLink, useLocation } from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUsers } from '@fortawesome/free-solid-svg-icons';\r\nimport {UserMenuButton} from './Buttons.js';\r\n\r\n\r\nexport function NavBar(){\r\n  let homeIcon= <FontAwesomeIcon icon={faHome}/>;\r\n  let peopleIcon = <FontAwesomeIcon icon={faUsers}/>;\r\n  return(\r\n    \r\n    <div className=\"navbar-flex\">\r\n      <div className=\"navbar-child-a mx-2\">\r\n        <NavLink className=\"navbar-navlink\" exact to=\"/\">Huskler</NavLink>\r\n      </div>\r\n\r\n      <div className=\"navbar-child-b mx-2\">\r\n        <ul className=\"list-unstyled\">\r\n          <li className=\"navbar-list\">\r\n            <NavLink exact to=\"/\" activeClassName=\"activeLink\" className=\"navbar-navlink icons\">{homeIcon}</NavLink>\r\n          </li>\r\n          <li className=\"navbar-list\">\r\n            <NavLink exact to=\"/people\" activeClassName=\"activeLink\" className=\"navbar-navlink icons\">{peopleIcon}</NavLink>\r\n          </li>\r\n        </ul> \r\n      </div>\r\n      <div className=\"navbar-child-c mx-2\">\r\n        <UserMenuButton />\r\n      \r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport function Footer(){\r\n  return(\r\n    <div className=\"mt-5\">\r\n      <hr></hr>\r\n      <p className=\"ml-5\">Copyright &copy; 2020 Vishank Rughwani and Sam Quiambao. All rights reserved.  </p>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport function MainBar(props){\r\n\r\n  let location = useLocation().pathname;\r\n  console.log(location);\r\n  \r\n  \r\n  if(location === '/submit-events'){\r\n    return(\r\n      <div className=\"flex-nav-submission-back\"><Link exact to=\"/\" className=\"btn btn-primary\">Go back</Link></div>\r\n    )\r\n  }else if(location === '/'){\r\n    return(\r\n      <div className=\"flex-nav-submission\">\r\n        <div>\r\n          <Link to=\"/submit-events\" className=\"btn btn-primary\" >Submit Events</Link>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n    \r\n  }else{\r\n    return(\r\n      <p>You've messed up, buckaroo</p>\r\n    )\r\n  }\r\n}\r\n","D:\\web-dev\\project-2-vishankrug\\src\\components\\People.js",[],"D:\\web-dev\\project-2-vishankrug\\src\\components\\Events.js",["51","52","53"],"import React, {useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {Card, CardText, CardBody,CardLink, CardTitle, Col, Row} from 'reactstrap';\r\nimport {Formik, useFormik, setNestedObjectValues} from 'formik';\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport { BackButton, SubmitEventButton } from './Buttons.js';\r\nimport { Button } from 'reactstrap';\r\n\r\nexport function EventsList(props){\r\n  let interestedCallback = props.interestedCallback;\r\n  let events = props.events;\r\n  let eventCards = events.map((event) => {\r\n    return <EventCard key={events.title} event={event} interestedCallback = {interestedCallback} />\r\n  })\r\n   \r\n  return(\r\n    <div>\r\n      <SubmitEventButton />\r\n      <Row>\r\n        {eventCards}\r\n      </Row>\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport function EventCard(props) {\r\n  let interestedCallback = props.interestedCallback;\r\n  let event = props.event;\r\n\r\n  const[redirectTo, setRedirectTo] = useState(undefined);\r\n\r\n  const handleClick =() => {\r\n    setRedirectTo(\"/event/\" + event.title);\r\n  }\r\n\r\n  if(redirectTo !== undefined){\r\n    return <Redirect push to={redirectTo}/>\r\n  }\r\n\r\n  return (\r\n    <Col md=\"6\" className=\"mt-4\">\r\n      <Card tag=\"a\" className=\"clickable\" onClick={handleClick}>\r\n        <div className=\"image-div\">\r\n          <img className=\"event-images\" src={\"images/\" + event.image} alt={\"an image for \" + event.title} />\r\n        </div>\r\n        <CardBody>\r\n          <CardTitle tag=\"h3\" className=\"text-center\">{event.title}</CardTitle>\r\n          <CardText className=\"text-center\">{\"Hosted by: \" + event.hostedBy}</CardText>\r\n          <CardText >{(event.description).substring(0,200) +\"...\"} </CardText>\r\n          <CardLink href=\"\">Click to learn more!</CardLink>\r\n        </CardBody>\r\n      </Card>\r\n\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport function EventPage(props){\r\n  let interestedCallback = props.interestedCallback;\r\n  let eventName = useParams().eventName;\r\n  let event = _.find(props.events, {title:eventName});\r\n \r\n  if(!event){\r\n    return <h2>No event that matches</h2>\r\n  }\r\n\r\n\r\n\r\n\r\n  return(\r\n    <div>\r\n      <img src={\"../images/\" + event.image} alt={event.title} className=\"event-images-lg mt-5\" />\r\n      <h2>{event.title}</h2>\r\n      <p><strong>Hosted by: </strong>{event.hostedBy}</p>\r\n      <p><strong>Date: </strong>{event.date}</p>\r\n      <p><strong>Time: </strong>{event.time}</p>\r\n      <p><strong>Location: </strong>{event.location}</p>\r\n      <p><strong>Link: </strong><a href={event.locationLink}>{event.locationLink}</a></p>\r\n      <p><strong>Description:</strong> <br></br> {event.description}</p>\r\n      <Button color=\"primary\" className=\"btn\">Interested!</Button>\r\n      <BackButton page=\"/\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function EventSubmission(props){\r\n  \r\n  const  formik = useFormik({\r\n    initialValues: {\r\n      title: '', \r\n      hostedBy: '', \r\n      date: '', \r\n      location: '', \r\n      description: '', \r\n      image: ''\r\n    }\r\n  });\r\n  return(\r\n  \r\n    \r\n    <main>\r\n      <h1 className=\"text-center\">Submit an event</h1>\r\n\r\n      \r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <label>Title of event</label> <br></br>\r\n        <input \r\n              type=\"title\"\r\n              name=\"title\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={setNestedObjectValues.title}\r\n        /> <br></br>\r\n\r\n        <label>Hosted By</label> <br></br>\r\n        <input \r\n              type=\"title\"\r\n              name=\"title\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={setNestedObjectValues.title}\r\n        /> <br></br>\r\n\r\n        <label>Date</label> <br></br>\r\n        <input \r\n              type=\"title\"\r\n              name=\"title\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={setNestedObjectValues.title}\r\n        /> <br></br>\r\n\r\n        <label>Location</label> <br></br>\r\n        <input \r\n              type=\"title\"\r\n              name=\"title\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={setNestedObjectValues.title}\r\n        /> <br></br>\r\n\r\n        <label>Description</label> <br></br>\r\n        <input \r\n              type=\"title\"\r\n              name=\"title\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={setNestedObjectValues.title}\r\n        /> <br></br>\r\n\r\n        <label>Image</label> <br></br>\r\n        <input \r\n              type=\"title\"\r\n              name=\"title\"\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              value={setNestedObjectValues.title}\r\n        /> <br></br>\r\n        <Button>Submit</Button>\r\n        <BackButton page=\"/\" />\r\n      </form>\r\n\r\n      \r\n      \r\n    \r\n    </main>\r\n\r\n  \r\n \r\n    \r\n  )\r\n}\r\n\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":6,"column":35,"nodeType":"60","messageId":"61","endLine":6,"endColumn":39},{"ruleId":"58","severity":1,"message":"62","line":11,"column":10,"nodeType":"60","messageId":"61","endLine":11,"endColumn":27},{"ruleId":"58","severity":1,"message":"63","line":45,"column":10,"nodeType":"60","messageId":"61","endLine":45,"endColumn":20},{"ruleId":"58","severity":1,"message":"64","line":46,"column":10,"nodeType":"60","messageId":"61","endLine":46,"endColumn":19},{"ruleId":"58","severity":1,"message":"65","line":2,"column":16,"nodeType":"60","messageId":"61","endLine":2,"endColumn":24},{"ruleId":"58","severity":1,"message":"66","line":2,"column":26,"nodeType":"60","messageId":"61","endLine":2,"endColumn":31},{"ruleId":"58","severity":1,"message":"67","line":8,"column":10,"nodeType":"60","messageId":"61","endLine":8,"endColumn":25},{"ruleId":"54","replacedBy":"68"},{"ruleId":"56","replacedBy":"69"},{"ruleId":"58","severity":1,"message":"70","line":1,"column":16,"nodeType":"60","messageId":"61","endLine":1,"endColumn":24},{"ruleId":"58","severity":1,"message":"71","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":16},{"ruleId":"58","severity":1,"message":"66","line":3,"column":18,"nodeType":"60","messageId":"61","endLine":3,"endColumn":23},{"ruleId":"58","severity":1,"message":"65","line":3,"column":31,"nodeType":"60","messageId":"61","endLine":3,"endColumn":39},{"ruleId":"58","severity":1,"message":"72","line":4,"column":9,"nodeType":"60","messageId":"61","endLine":4,"endColumn":15},{"ruleId":"58","severity":1,"message":"73","line":28,"column":7,"nodeType":"60","messageId":"61","endLine":28,"endColumn":25},{"ruleId":"58","severity":1,"message":"73","line":60,"column":7,"nodeType":"60","messageId":"61","endLine":60,"endColumn":25},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'SubmitEventButton' is defined but never used.","'interested' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'Redirect' is defined but never used.","'Route' is defined but never used.","'EventSubmission' is defined but never used.",["74"],["75"],"'useState' is defined but never used.","'Switch' is defined but never used.","'Formik' is defined but never used.","'interestedCallback' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
